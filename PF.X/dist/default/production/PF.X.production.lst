

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 12 15:50:32 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000FE0                     bsr             equ	4064
    78   000FE9                     fsr0            equ	4073
    79   000FEA                     fsr0h           equ	4074
    80   000FE9                     fsr0l           equ	4073
    81   000FE1                     fsr1            equ	4065
    82   000FE2                     fsr1h           equ	4066
    83   000FE1                     fsr1l           equ	4065
    84   000FD9                     fsr2            equ	4057
    85   000FDA                     fsr2h           equ	4058
    86   000FD9                     fsr2l           equ	4057
    87   000FEF                     indf0           equ	4079
    88   000FE7                     indf1           equ	4071
    89   000FDF                     indf2           equ	4063
    90   000FF2                     intcon          equ	4082
    91   000000                     nvmcon          equ	0
    92   000FF9                     pcl             equ	4089
    93   000FFA                     pclath          equ	4090
    94   000FFB                     pclatu          equ	4091
    95   000FEB                     plusw0          equ	4075
    96   000FE3                     plusw1          equ	4067
    97   000FDB                     plusw2          equ	4059
    98   000FED                     postdec0        equ	4077
    99   000FE5                     postdec1        equ	4069
   100   000FDD                     postdec2        equ	4061
   101   000FEE                     postinc0        equ	4078
   102   000FE6                     postinc1        equ	4070
   103   000FDE                     postinc2        equ	4062
   104   000FEC                     preinc0         equ	4076
   105   000FE4                     preinc1         equ	4068
   106   000FDC                     preinc2         equ	4060
   107   000FF3                     prod            equ	4083
   108   000FF4                     prodh           equ	4084
   109   000FF3                     prodl           equ	4083
   110   000FD8                     status          equ	4056
   111   000FF5                     tablat          equ	4085
   112   000FF6                     tblptr          equ	4086
   113   000FF7                     tblptrh         equ	4087
   114   000FF6                     tblptrl         equ	4086
   115   000FF8                     tblptru         equ	4088
   116   000FFD                     tosl            equ	4093
   117   000FE8                     wreg            equ	4072
   118   000F62                     SPPDATA         equ	3938	;# 
   119   000F63                     SPPCFG          equ	3939	;# 
   120   000F64                     SPPEPS          equ	3940	;# 
   121   000F65                     SPPCON          equ	3941	;# 
   122   000F66                     UFRM            equ	3942	;# 
   123   000F66                     UFRML           equ	3942	;# 
   124   000F67                     UFRMH           equ	3943	;# 
   125   000F68                     UIR             equ	3944	;# 
   126   000F69                     UIE             equ	3945	;# 
   127   000F6A                     UEIR            equ	3946	;# 
   128   000F6B                     UEIE            equ	3947	;# 
   129   000F6C                     USTAT           equ	3948	;# 
   130   000F6D                     UCON            equ	3949	;# 
   131   000F6E                     UADDR           equ	3950	;# 
   132   000F6F                     UCFG            equ	3951	;# 
   133   000F70                     UEP0            equ	3952	;# 
   134   000F71                     UEP1            equ	3953	;# 
   135   000F72                     UEP2            equ	3954	;# 
   136   000F73                     UEP3            equ	3955	;# 
   137   000F74                     UEP4            equ	3956	;# 
   138   000F75                     UEP5            equ	3957	;# 
   139   000F76                     UEP6            equ	3958	;# 
   140   000F77                     UEP7            equ	3959	;# 
   141   000F78                     UEP8            equ	3960	;# 
   142   000F79                     UEP9            equ	3961	;# 
   143   000F7A                     UEP10           equ	3962	;# 
   144   000F7B                     UEP11           equ	3963	;# 
   145   000F7C                     UEP12           equ	3964	;# 
   146   000F7D                     UEP13           equ	3965	;# 
   147   000F7E                     UEP14           equ	3966	;# 
   148   000F7F                     UEP15           equ	3967	;# 
   149   000F80                     PORTA           equ	3968	;# 
   150   000F81                     PORTB           equ	3969	;# 
   151   000F82                     PORTC           equ	3970	;# 
   152   000F83                     PORTD           equ	3971	;# 
   153   000F84                     PORTE           equ	3972	;# 
   154   000F89                     LATA            equ	3977	;# 
   155   000F8A                     LATB            equ	3978	;# 
   156   000F8B                     LATC            equ	3979	;# 
   157   000F8C                     LATD            equ	3980	;# 
   158   000F8D                     LATE            equ	3981	;# 
   159   000F92                     TRISA           equ	3986	;# 
   160   000F92                     DDRA            equ	3986	;# 
   161   000F93                     TRISB           equ	3987	;# 
   162   000F93                     DDRB            equ	3987	;# 
   163   000F94                     TRISC           equ	3988	;# 
   164   000F94                     DDRC            equ	3988	;# 
   165   000F95                     TRISD           equ	3989	;# 
   166   000F95                     DDRD            equ	3989	;# 
   167   000F96                     TRISE           equ	3990	;# 
   168   000F96                     DDRE            equ	3990	;# 
   169   000F9B                     OSCTUNE         equ	3995	;# 
   170   000F9D                     PIE1            equ	3997	;# 
   171   000F9E                     PIR1            equ	3998	;# 
   172   000F9F                     IPR1            equ	3999	;# 
   173   000FA0                     PIE2            equ	4000	;# 
   174   000FA1                     PIR2            equ	4001	;# 
   175   000FA2                     IPR2            equ	4002	;# 
   176   000FA6                     EECON1          equ	4006	;# 
   177   000FA7                     EECON2          equ	4007	;# 
   178   000FA8                     EEDATA          equ	4008	;# 
   179   000FA9                     EEADR           equ	4009	;# 
   180   000FAB                     RCSTA           equ	4011	;# 
   181   000FAB                     RCSTA1          equ	4011	;# 
   182   000FAC                     TXSTA           equ	4012	;# 
   183   000FAC                     TXSTA1          equ	4012	;# 
   184   000FAD                     TXREG           equ	4013	;# 
   185   000FAD                     TXREG1          equ	4013	;# 
   186   000FAE                     RCREG           equ	4014	;# 
   187   000FAE                     RCREG1          equ	4014	;# 
   188   000FAF                     SPBRG           equ	4015	;# 
   189   000FAF                     SPBRG1          equ	4015	;# 
   190   000FB0                     SPBRGH          equ	4016	;# 
   191   000FB1                     T3CON           equ	4017	;# 
   192   000FB2                     TMR3            equ	4018	;# 
   193   000FB2                     TMR3L           equ	4018	;# 
   194   000FB3                     TMR3H           equ	4019	;# 
   195   000FB4                     CMCON           equ	4020	;# 
   196   000FB5                     CVRCON          equ	4021	;# 
   197   000FB6                     ECCP1AS         equ	4022	;# 
   198   000FB6                     CCP1AS          equ	4022	;# 
   199   000FB7                     ECCP1DEL        equ	4023	;# 
   200   000FB7                     CCP1DEL         equ	4023	;# 
   201   000FB8                     BAUDCON         equ	4024	;# 
   202   000FB8                     BAUDCTL         equ	4024	;# 
   203   000FBA                     CCP2CON         equ	4026	;# 
   204   000FBB                     CCPR2           equ	4027	;# 
   205   000FBB                     CCPR2L          equ	4027	;# 
   206   000FBC                     CCPR2H          equ	4028	;# 
   207   000FBD                     CCP1CON         equ	4029	;# 
   208   000FBD                     ECCP1CON        equ	4029	;# 
   209   000FBE                     CCPR1           equ	4030	;# 
   210   000FBE                     CCPR1L          equ	4030	;# 
   211   000FBF                     CCPR1H          equ	4031	;# 
   212   000FC0                     ADCON2          equ	4032	;# 
   213   000FC1                     ADCON1          equ	4033	;# 
   214   000FC2                     ADCON0          equ	4034	;# 
   215   000FC3                     ADRES           equ	4035	;# 
   216   000FC3                     ADRESL          equ	4035	;# 
   217   000FC4                     ADRESH          equ	4036	;# 
   218   000FC5                     SSPCON2         equ	4037	;# 
   219   000FC6                     SSPCON1         equ	4038	;# 
   220   000FC7                     SSPSTAT         equ	4039	;# 
   221   000FC8                     SSPADD          equ	4040	;# 
   222   000FC9                     SSPBUF          equ	4041	;# 
   223   000FCA                     T2CON           equ	4042	;# 
   224   000FCB                     PR2             equ	4043	;# 
   225   000FCB                     MEMCON          equ	4043	;# 
   226   000FCC                     TMR2            equ	4044	;# 
   227   000FCD                     T1CON           equ	4045	;# 
   228   000FCE                     TMR1            equ	4046	;# 
   229   000FCE                     TMR1L           equ	4046	;# 
   230   000FCF                     TMR1H           equ	4047	;# 
   231   000FD0                     RCON            equ	4048	;# 
   232   000FD1                     WDTCON          equ	4049	;# 
   233   000FD2                     HLVDCON         equ	4050	;# 
   234   000FD2                     LVDCON          equ	4050	;# 
   235   000FD3                     OSCCON          equ	4051	;# 
   236   000FD5                     T0CON           equ	4053	;# 
   237   000FD6                     TMR0            equ	4054	;# 
   238   000FD6                     TMR0L           equ	4054	;# 
   239   000FD7                     TMR0H           equ	4055	;# 
   240   000FD8                     STATUS          equ	4056	;# 
   241   000FD9                     FSR2            equ	4057	;# 
   242   000FD9                     FSR2L           equ	4057	;# 
   243   000FDA                     FSR2H           equ	4058	;# 
   244   000FDB                     PLUSW2          equ	4059	;# 
   245   000FDC                     PREINC2         equ	4060	;# 
   246   000FDD                     POSTDEC2        equ	4061	;# 
   247   000FDE                     POSTINC2        equ	4062	;# 
   248   000FDF                     INDF2           equ	4063	;# 
   249   000FE0                     BSR             equ	4064	;# 
   250   000FE1                     FSR1            equ	4065	;# 
   251   000FE1                     FSR1L           equ	4065	;# 
   252   000FE2                     FSR1H           equ	4066	;# 
   253   000FE3                     PLUSW1          equ	4067	;# 
   254   000FE4                     PREINC1         equ	4068	;# 
   255   000FE5                     POSTDEC1        equ	4069	;# 
   256   000FE6                     POSTINC1        equ	4070	;# 
   257   000FE7                     INDF1           equ	4071	;# 
   258   000FE8                     WREG            equ	4072	;# 
   259   000FE9                     FSR0            equ	4073	;# 
   260   000FE9                     FSR0L           equ	4073	;# 
   261   000FEA                     FSR0H           equ	4074	;# 
   262   000FEB                     PLUSW0          equ	4075	;# 
   263   000FEC                     PREINC0         equ	4076	;# 
   264   000FED                     POSTDEC0        equ	4077	;# 
   265   000FEE                     POSTINC0        equ	4078	;# 
   266   000FEF                     INDF0           equ	4079	;# 
   267   000FF0                     INTCON3         equ	4080	;# 
   268   000FF1                     INTCON2         equ	4081	;# 
   269   000FF2                     INTCON          equ	4082	;# 
   270   000FF3                     PROD            equ	4083	;# 
   271   000FF3                     PRODL           equ	4083	;# 
   272   000FF4                     PRODH           equ	4084	;# 
   273   000FF5                     TABLAT          equ	4085	;# 
   274   000FF6                     TBLPTR          equ	4086	;# 
   275   000FF6                     TBLPTRL         equ	4086	;# 
   276   000FF7                     TBLPTRH         equ	4087	;# 
   277   000FF8                     TBLPTRU         equ	4088	;# 
   278   000FF9                     PCLAT           equ	4089	;# 
   279   000FF9                     PC              equ	4089	;# 
   280   000FF9                     PCL             equ	4089	;# 
   281   000FFA                     PCLATH          equ	4090	;# 
   282   000FFB                     PCLATU          equ	4091	;# 
   283   000FFC                     STKPTR          equ	4092	;# 
   284   000FFD                     TOS             equ	4093	;# 
   285   000FFD                     TOSL            equ	4093	;# 
   286   000FFE                     TOSH            equ	4094	;# 
   287   000FFF                     TOSU            equ	4095	;# 
   288   000F62                     SPPDATA         equ	3938	;# 
   289   000F63                     SPPCFG          equ	3939	;# 
   290   000F64                     SPPEPS          equ	3940	;# 
   291   000F65                     SPPCON          equ	3941	;# 
   292   000F66                     UFRM            equ	3942	;# 
   293   000F66                     UFRML           equ	3942	;# 
   294   000F67                     UFRMH           equ	3943	;# 
   295   000F68                     UIR             equ	3944	;# 
   296   000F69                     UIE             equ	3945	;# 
   297   000F6A                     UEIR            equ	3946	;# 
   298   000F6B                     UEIE            equ	3947	;# 
   299   000F6C                     USTAT           equ	3948	;# 
   300   000F6D                     UCON            equ	3949	;# 
   301   000F6E                     UADDR           equ	3950	;# 
   302   000F6F                     UCFG            equ	3951	;# 
   303   000F70                     UEP0            equ	3952	;# 
   304   000F71                     UEP1            equ	3953	;# 
   305   000F72                     UEP2            equ	3954	;# 
   306   000F73                     UEP3            equ	3955	;# 
   307   000F74                     UEP4            equ	3956	;# 
   308   000F75                     UEP5            equ	3957	;# 
   309   000F76                     UEP6            equ	3958	;# 
   310   000F77                     UEP7            equ	3959	;# 
   311   000F78                     UEP8            equ	3960	;# 
   312   000F79                     UEP9            equ	3961	;# 
   313   000F7A                     UEP10           equ	3962	;# 
   314   000F7B                     UEP11           equ	3963	;# 
   315   000F7C                     UEP12           equ	3964	;# 
   316   000F7D                     UEP13           equ	3965	;# 
   317   000F7E                     UEP14           equ	3966	;# 
   318   000F7F                     UEP15           equ	3967	;# 
   319   000F80                     PORTA           equ	3968	;# 
   320   000F81                     PORTB           equ	3969	;# 
   321   000F82                     PORTC           equ	3970	;# 
   322   000F83                     PORTD           equ	3971	;# 
   323   000F84                     PORTE           equ	3972	;# 
   324   000F89                     LATA            equ	3977	;# 
   325   000F8A                     LATB            equ	3978	;# 
   326   000F8B                     LATC            equ	3979	;# 
   327   000F8C                     LATD            equ	3980	;# 
   328   000F8D                     LATE            equ	3981	;# 
   329   000F92                     TRISA           equ	3986	;# 
   330   000F92                     DDRA            equ	3986	;# 
   331   000F93                     TRISB           equ	3987	;# 
   332   000F93                     DDRB            equ	3987	;# 
   333   000F94                     TRISC           equ	3988	;# 
   334   000F94                     DDRC            equ	3988	;# 
   335   000F95                     TRISD           equ	3989	;# 
   336   000F95                     DDRD            equ	3989	;# 
   337   000F96                     TRISE           equ	3990	;# 
   338   000F96                     DDRE            equ	3990	;# 
   339   000F9B                     OSCTUNE         equ	3995	;# 
   340   000F9D                     PIE1            equ	3997	;# 
   341   000F9E                     PIR1            equ	3998	;# 
   342   000F9F                     IPR1            equ	3999	;# 
   343   000FA0                     PIE2            equ	4000	;# 
   344   000FA1                     PIR2            equ	4001	;# 
   345   000FA2                     IPR2            equ	4002	;# 
   346   000FA6                     EECON1          equ	4006	;# 
   347   000FA7                     EECON2          equ	4007	;# 
   348   000FA8                     EEDATA          equ	4008	;# 
   349   000FA9                     EEADR           equ	4009	;# 
   350   000FAB                     RCSTA           equ	4011	;# 
   351   000FAB                     RCSTA1          equ	4011	;# 
   352   000FAC                     TXSTA           equ	4012	;# 
   353   000FAC                     TXSTA1          equ	4012	;# 
   354   000FAD                     TXREG           equ	4013	;# 
   355   000FAD                     TXREG1          equ	4013	;# 
   356   000FAE                     RCREG           equ	4014	;# 
   357   000FAE                     RCREG1          equ	4014	;# 
   358   000FAF                     SPBRG           equ	4015	;# 
   359   000FAF                     SPBRG1          equ	4015	;# 
   360   000FB0                     SPBRGH          equ	4016	;# 
   361   000FB1                     T3CON           equ	4017	;# 
   362   000FB2                     TMR3            equ	4018	;# 
   363   000FB2                     TMR3L           equ	4018	;# 
   364   000FB3                     TMR3H           equ	4019	;# 
   365   000FB4                     CMCON           equ	4020	;# 
   366   000FB5                     CVRCON          equ	4021	;# 
   367   000FB6                     ECCP1AS         equ	4022	;# 
   368   000FB6                     CCP1AS          equ	4022	;# 
   369   000FB7                     ECCP1DEL        equ	4023	;# 
   370   000FB7                     CCP1DEL         equ	4023	;# 
   371   000FB8                     BAUDCON         equ	4024	;# 
   372   000FB8                     BAUDCTL         equ	4024	;# 
   373   000FBA                     CCP2CON         equ	4026	;# 
   374   000FBB                     CCPR2           equ	4027	;# 
   375   000FBB                     CCPR2L          equ	4027	;# 
   376   000FBC                     CCPR2H          equ	4028	;# 
   377   000FBD                     CCP1CON         equ	4029	;# 
   378   000FBD                     ECCP1CON        equ	4029	;# 
   379   000FBE                     CCPR1           equ	4030	;# 
   380   000FBE                     CCPR1L          equ	4030	;# 
   381   000FBF                     CCPR1H          equ	4031	;# 
   382   000FC0                     ADCON2          equ	4032	;# 
   383   000FC1                     ADCON1          equ	4033	;# 
   384   000FC2                     ADCON0          equ	4034	;# 
   385   000FC3                     ADRES           equ	4035	;# 
   386   000FC3                     ADRESL          equ	4035	;# 
   387   000FC4                     ADRESH          equ	4036	;# 
   388   000FC5                     SSPCON2         equ	4037	;# 
   389   000FC6                     SSPCON1         equ	4038	;# 
   390   000FC7                     SSPSTAT         equ	4039	;# 
   391   000FC8                     SSPADD          equ	4040	;# 
   392   000FC9                     SSPBUF          equ	4041	;# 
   393   000FCA                     T2CON           equ	4042	;# 
   394   000FCB                     PR2             equ	4043	;# 
   395   000FCB                     MEMCON          equ	4043	;# 
   396   000FCC                     TMR2            equ	4044	;# 
   397   000FCD                     T1CON           equ	4045	;# 
   398   000FCE                     TMR1            equ	4046	;# 
   399   000FCE                     TMR1L           equ	4046	;# 
   400   000FCF                     TMR1H           equ	4047	;# 
   401   000FD0                     RCON            equ	4048	;# 
   402   000FD1                     WDTCON          equ	4049	;# 
   403   000FD2                     HLVDCON         equ	4050	;# 
   404   000FD2                     LVDCON          equ	4050	;# 
   405   000FD3                     OSCCON          equ	4051	;# 
   406   000FD5                     T0CON           equ	4053	;# 
   407   000FD6                     TMR0            equ	4054	;# 
   408   000FD6                     TMR0L           equ	4054	;# 
   409   000FD7                     TMR0H           equ	4055	;# 
   410   000FD8                     STATUS          equ	4056	;# 
   411   000FD9                     FSR2            equ	4057	;# 
   412   000FD9                     FSR2L           equ	4057	;# 
   413   000FDA                     FSR2H           equ	4058	;# 
   414   000FDB                     PLUSW2          equ	4059	;# 
   415   000FDC                     PREINC2         equ	4060	;# 
   416   000FDD                     POSTDEC2        equ	4061	;# 
   417   000FDE                     POSTINC2        equ	4062	;# 
   418   000FDF                     INDF2           equ	4063	;# 
   419   000FE0                     BSR             equ	4064	;# 
   420   000FE1                     FSR1            equ	4065	;# 
   421   000FE1                     FSR1L           equ	4065	;# 
   422   000FE2                     FSR1H           equ	4066	;# 
   423   000FE3                     PLUSW1          equ	4067	;# 
   424   000FE4                     PREINC1         equ	4068	;# 
   425   000FE5                     POSTDEC1        equ	4069	;# 
   426   000FE6                     POSTINC1        equ	4070	;# 
   427   000FE7                     INDF1           equ	4071	;# 
   428   000FE8                     WREG            equ	4072	;# 
   429   000FE9                     FSR0            equ	4073	;# 
   430   000FE9                     FSR0L           equ	4073	;# 
   431   000FEA                     FSR0H           equ	4074	;# 
   432   000FEB                     PLUSW0          equ	4075	;# 
   433   000FEC                     PREINC0         equ	4076	;# 
   434   000FED                     POSTDEC0        equ	4077	;# 
   435   000FEE                     POSTINC0        equ	4078	;# 
   436   000FEF                     INDF0           equ	4079	;# 
   437   000FF0                     INTCON3         equ	4080	;# 
   438   000FF1                     INTCON2         equ	4081	;# 
   439   000FF2                     INTCON          equ	4082	;# 
   440   000FF3                     PROD            equ	4083	;# 
   441   000FF3                     PRODL           equ	4083	;# 
   442   000FF4                     PRODH           equ	4084	;# 
   443   000FF5                     TABLAT          equ	4085	;# 
   444   000FF6                     TBLPTR          equ	4086	;# 
   445   000FF6                     TBLPTRL         equ	4086	;# 
   446   000FF7                     TBLPTRH         equ	4087	;# 
   447   000FF8                     TBLPTRU         equ	4088	;# 
   448   000FF9                     PCLAT           equ	4089	;# 
   449   000FF9                     PC              equ	4089	;# 
   450   000FF9                     PCL             equ	4089	;# 
   451   000FFA                     PCLATH          equ	4090	;# 
   452   000FFB                     PCLATU          equ	4091	;# 
   453   000FFC                     STKPTR          equ	4092	;# 
   454   000FFD                     TOS             equ	4093	;# 
   455   000FFD                     TOSL            equ	4093	;# 
   456   000FFE                     TOSH            equ	4094	;# 
   457   000FFF                     TOSU            equ	4095	;# 
   458   000F83                     _PORTD          set	3971
   459   000F8C                     _LATD           set	3980
   460   000F8D                     _LATEbits       set	3981
   461   000FBD                     _CCP1CONbits    set	4029
   462   000F8C                     _LATDbits       set	3980
   463   000FAE                     _RCREG          set	4014
   464   000F9E                     _PIR1bits       set	3998
   465   000F95                     _TRISDbits      set	3989
   466   000F96                     _TRISE          set	3990
   467   000F95                     _TRISD          set	3989
   468   000FAD                     _TXREG          set	4013
   469   000FAB                     _RCSTAbits      set	4011
   470   000FB8                     _BAUDCONbits    set	4024
   471   000FAC                     _TXSTAbits      set	4012
   472   000FAF                     _SPBRG          set	4015
   473   000FBE                     _CCPR1L         set	4030
   474   000FCA                     _T2CON          set	4042
   475   000FBD                     _CCP1CON        set	4029
   476   000FCB                     _PR2            set	4043
   477   000FCA                     _T2CONbits      set	4042
   478   000F94                     _TRISCbits      set	3988
   479   000FC3                     _ADRESL         set	4035
   480   000FC4                     _ADRESH         set	4036
   481   000FC2                     _ADCON0bits     set	4034
   482   000FC2                     _ADCON0         set	4034
   483   000FC0                     _ADCON2         set	4032
   484   000FC1                     _ADCON1         set	4033
   485   000F92                     _TRISAbits      set	3986
   486                           
   487                           	psect	mediumconst
   488   003EA6                     __pmediumconst:
   489                           	callstack 0
   490   003EA6  00                 	db	0
   491   003EA7                     STR_4:
   492   003EA7  4F                 	db	79	;'O'
   493   003EA8  76                 	db	118	;'v'
   494   003EA9  65                 	db	101	;'e'
   495   003EAA  72                 	db	114	;'r'
   496   003EAB  72                 	db	114	;'r'
   497   003EAC  69                 	db	105	;'i'
   498   003EAD  64                 	db	100	;'d'
   499   003EAE  65                 	db	101	;'e'
   500   003EAF  20                 	db	32
   501   003EB0  4F                 	db	79	;'O'
   502   003EB1  46                 	db	70	;'F'
   503   003EB2  46                 	db	70	;'F'
   504   003EB3  0D                 	db	13
   505   003EB4  0A                 	db	10
   506   003EB5  00                 	db	0
   507   003EB6                     STR_3:
   508   003EB6  4F                 	db	79	;'O'
   509   003EB7  76                 	db	118	;'v'
   510   003EB8  65                 	db	101	;'e'
   511   003EB9  72                 	db	114	;'r'
   512   003EBA  72                 	db	114	;'r'
   513   003EBB  69                 	db	105	;'i'
   514   003EBC  64                 	db	100	;'d'
   515   003EBD  65                 	db	101	;'e'
   516   003EBE  20                 	db	32
   517   003EBF  4F                 	db	79	;'O'
   518   003EC0  4E                 	db	78	;'N'
   519   003EC1  0D                 	db	13
   520   003EC2  0A                 	db	10
   521   003EC3  00                 	db	0
   522   003EC4                     STR_5:
   523   003EC4  41                 	db	65	;'A'
   524   003EC5  75                 	db	117	;'u'
   525   003EC6  74                 	db	116	;'t'
   526   003EC7  6F                 	db	111	;'o'
   527   003EC8  6D                 	db	109	;'m'
   528   003EC9  61                 	db	97	;'a'
   529   003ECA  74                 	db	116	;'t'
   530   003ECB  69                 	db	105	;'i'
   531   003ECC  63                 	db	99	;'c'
   532   003ECD  6F                 	db	111	;'o'
   533   003ECE  0D                 	db	13
   534   003ECF  0A                 	db	10
   535   003ED0  00                 	db	0
   536   003ED1                     STR_1:
   537   003ED1  54                 	db	84	;'T'
   538   003ED2  65                 	db	101	;'e'
   539   003ED3  6D                 	db	109	;'m'
   540   003ED4  70                 	db	112	;'p'
   541   003ED5  65                 	db	101	;'e'
   542   003ED6  72                 	db	114	;'r'
   543   003ED7  61                 	db	97	;'a'
   544   003ED8  74                 	db	116	;'t'
   545   003ED9  75                 	db	117	;'u'
   546   003EDA  72                 	db	114	;'r'
   547   003EDB  61                 	db	97	;'a'
   548   003EDC  3A                 	db	58	;':'
   549   003EDD  00                 	db	0
   550   003EDE                     STR_9:
   551   003EDE  54                 	db	84	;'T'
   552   003EDF  65                 	db	101	;'e'
   553   003EE0  6D                 	db	109	;'m'
   554   003EE1  70                 	db	112	;'p'
   555   003EE2  3D                 	db	61	;'='
   556   003EE3  25                 	db	37
   557   003EE4  64                 	db	100	;'d'
   558   003EE5  43                 	db	67	;'C'
   559   003EE6  0D                 	db	13
   560   003EE7  0A                 	db	10
   561   003EE8  00                 	db	0
   562   003EE9                     STR_2:
   563   003EE9  56                 	db	86	;'V'
   564   003EEA  45                 	db	69	;'E'
   565   003EEB  4E                 	db	78	;'N'
   566   003EEC  54                 	db	84	;'T'
   567   003EED  3A                 	db	58	;':'
   568   003EEE  4F                 	db	79	;'O'
   569   003EEF  46                 	db	70	;'F'
   570   003EF0  46                 	db	70	;'F'
   571   003EF1  00                 	db	0
   572   003EF2                     STR_6:
   573   003EF2  25                 	db	37
   574   003EF3  33                 	db	51	;'3'
   575   003EF4  64                 	db	100	;'d'
   576   003EF5  43                 	db	67	;'C'
   577   003EF6  00                 	db	0
   578   003EF7                     STR_7:
   579   003EF7  4F                 	db	79	;'O'
   580   003EF8  4E                 	db	78	;'N'
   581   003EF9  20                 	db	32
   582   003EFA  00                 	db	0
   583   003EEE                     STR_8           equ	STR_2+5
   584   003EFB  00                 	db	0	; dummy byte at the end
   585   003EA6                     __smallconst    set	__pmediumconst
   586   003EA6                     __mediumconst   set	__pmediumconst
   587   000002                     __activetblptr  equ	2
   588                           
   589                           ; #config settings
   590                           
   591                           	psect	cinit
   592   003290                     __pcinit:
   593                           	callstack 0
   594   003290                     start_initialization:
   595                           	callstack 0
   596   003290                     __initialization:
   597                           	callstack 0
   598                           
   599                           ; Clear objects allocated to BANK0 (34 bytes)
   600   003290  EE00  F083         	lfsr	0,__pbssBANK0
   601   003294  0E22               	movlw	34
   602   003296                     clear_0:
   603   003296  6AEE               	clrf	postinc0,c
   604   003298  06E8               	decf	wreg,f,c
   605   00329A  E1FD               	bnz	clear_0
   606                           
   607                           ; Clear objects allocated to COMRAM (5 bytes)
   608   00329C  6A4B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   609   00329E  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   610   0032A0  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   611   0032A2  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   612   0032A4  6A47               	clrf	__pbssCOMRAM& (0+255),c
   613   0032A6                     end_of_initialization:
   614                           	callstack 0
   615   0032A6                     __end_of__initialization:
   616                           	callstack 0
   617   0032A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   618   0032A8  6EF8               	movwf	tblptru,c
   619   0032AA  0100               	movlb	0
   620   0032AC  EFCD  F01D         	goto	_main	;jump to C main() function
   621                           
   622                           	psect	bssCOMRAM
   623   000047                     __pbssCOMRAM:
   624                           	callstack 0
   625   000047                     _width:
   626                           	callstack 0
   627   000047                     	ds	2
   628   000049                     _prec:
   629                           	callstack 0
   630   000049                     	ds	2
   631   00004B                     _flags:
   632                           	callstack 0
   633   00004B                     	ds	1
   634                           
   635                           	psect	bssBANK0
   636   000083                     __pbssBANK0:
   637                           	callstack 0
   638   000083                     _manual_state:
   639                           	callstack 0
   640   000083                     	ds	1
   641   000084                     _override:
   642                           	callstack 0
   643   000084                     	ds	1
   644   000085                     _dbuf:
   645                           	callstack 0
   646   000085                     	ds	32
   647                           
   648                           	psect	cstackBANK0
   649   000060                     __pcstackBANK0:
   650                           	callstack 0
   651   000060                     main@uart_buf:
   652                           	callstack 0
   653                           
   654                           ; 20 bytes @ 0x0
   655   000060                     	ds	20
   656   000074                     main@temp_str:
   657                           	callstack 0
   658                           
   659                           ; 5 bytes @ 0x14
   660   000074                     	ds	5
   661   000079                     main@adc:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x19
   665   000079                     	ds	2
   666   00007B                     _main$655:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x1B
   670   00007B                     	ds	2
   671   00007D                     main@pwm:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x1D
   675   00007D                     	ds	1
   676   00007E                     main@cmd:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x1E
   680   00007E                     	ds	1
   681   00007F                     main@t:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x1F
   685   00007F                     	ds	2
   686   000081                     main@temp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x21
   690   000081                     	ds	2
   691                           
   692                           	psect	cstackCOMRAM
   693   000001                     __pcstackCOMRAM:
   694                           	callstack 0
   695   000001                     ?_Read_Temperature:
   696                           	callstack 0
   697   000001                     ?___awdiv:
   698                           	callstack 0
   699   000001                     ?___awmod:
   700                           	callstack 0
   701   000001                     ?_read_prec_or_width:
   702                           	callstack 0
   703   000001                     UART_Write@data:
   704                           	callstack 0
   705   000001                     ENVIA_NIBBLE@dato:
   706                           	callstack 0
   707   000001                     LEER_LCD@aux:
   708                           	callstack 0
   709   000001                     read_prec_or_width@fmt:
   710                           	callstack 0
   711   000001                     ___awdiv@dividend:
   712                           	callstack 0
   713   000001                     ___awmod@dividend:
   714                           	callstack 0
   715   000001                     fputc@c:
   716                           	callstack 0
   717   000001                     
   718                           ; 1 bytes @ 0x0
   719   000001                     	ds	1
   720   000002                     ENVIA_CHAR@dato:
   721                           	callstack 0
   722   000002                     ENVIA_LCD_CMD@dato:
   723                           	callstack 0
   724   000002                     read_prec_or_width@ap:
   725                           	callstack 0
   726   000002                     UART_Write_Text@text:
   727                           	callstack 0
   728   000002                     
   729                           ; 1 bytes @ 0x1
   730   000002                     	ds	1
   731   000003                     ENVIA_CHAR@aux:
   732                           	callstack 0
   733   000003                     ENVIA_LCD_CMD@aux:
   734                           	callstack 0
   735   000003                     fputc@fp:
   736                           	callstack 0
   737   000003                     ___awdiv@divisor:
   738                           	callstack 0
   739   000003                     ___awmod@divisor:
   740                           	callstack 0
   741   000003                     ??_Read_Temperature:
   742   000003                     ??_read_prec_or_width:
   743                           
   744                           ; 1 bytes @ 0x2
   745   000003                     	ds	1
   746   000004                     POS_CURSOR@columna:
   747                           	callstack 0
   748   000004                     ESCRIBE_MENSAJE@cadena:
   749                           	callstack 0
   750   000004                     ??_LCD_CONFIG:
   751   000004                     ??_fputc:
   752   000004                     
   753                           ; 1 bytes @ 0x3
   754   000004                     	ds	1
   755   000005                     POS_CURSOR@fila:
   756                           	callstack 0
   757   000005                     ___awdiv@counter:
   758                           	callstack 0
   759   000005                     ___awmod@counter:
   760                           	callstack 0
   761   000005                     read_prec_or_width@c:
   762                           	callstack 0
   763   000005                     
   764                           ; 1 bytes @ 0x4
   765   000005                     	ds	1
   766   000006                     ESCRIBE_MENSAJE@tam:
   767                           	callstack 0
   768   000006                     ___awdiv@sign:
   769                           	callstack 0
   770   000006                     ___awmod@sign:
   771                           	callstack 0
   772   000006                     read_prec_or_width@n:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x5
   776   000006                     	ds	1
   777   000007                     ?_abs:
   778                           	callstack 0
   779   000007                     ___awdiv@quotient:
   780                           	callstack 0
   781   000007                     abs@a:
   782                           	callstack 0
   783   000007                     ??_ESCRIBE_MENSAJE:
   784                           
   785                           ; 1 bytes @ 0x6
   786   000007                     	ds	2
   787   000009                     ESCRIBE_MENSAJE@i:
   788                           	callstack 0
   789   000009                     fputs@s:
   790                           	callstack 0
   791   000009                     ??_abs:
   792                           
   793                           ; 1 bytes @ 0x8
   794   000009                     	ds	1
   795   00000A                     fputs@fp:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x9
   799   00000A                     	ds	1
   800   00000B                     fputs@c:
   801                           	callstack 0
   802   00000B                     
   803                           ; 1 bytes @ 0xA
   804   00000B                     	ds	1
   805   00000C                     fputs@i:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0xB
   809   00000C                     	ds	2
   810   00000E                     pad@fp:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0xD
   814   00000E                     	ds	1
   815   00000F                     pad@buf:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0xE
   819   00000F                     	ds	1
   820   000010                     pad@p:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0xF
   824   000010                     	ds	2
   825   000012                     ??_pad:
   826                           
   827                           ; 1 bytes @ 0x11
   828   000012                     	ds	1
   829   000013                     pad@i:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x12
   833   000013                     	ds	2
   834   000015                     dtoa@fp:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x14
   838   000015                     	ds	1
   839   000016                     dtoa@d:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x15
   843   000016                     	ds	2
   844   000018                     _dtoa$1251:
   845                           	callstack 0
   846   000018                     
   847                           ; 1 bytes @ 0x17
   848   000018                     	ds	2
   849   00001A                     dtoa@w:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x19
   853   00001A                     	ds	2
   854   00001C                     dtoa@p:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x1B
   858   00001C                     	ds	1
   859   00001D                     dtoa@s:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x1C
   863   00001D                     	ds	1
   864   00001E                     dtoa@i:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x1D
   868   00001E                     	ds	2
   869   000020                     vfpfcnvrt@fp:
   870                           	callstack 0
   871                           
   872                           ; 1 bytes @ 0x1F
   873   000020                     	ds	1
   874   000021                     vfpfcnvrt@fmt:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x20
   878   000021                     	ds	1
   879   000022                     vfpfcnvrt@ap:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x21
   883   000022                     	ds	1
   884   000023                     ??_vfpfcnvrt:
   885                           
   886                           ; 1 bytes @ 0x22
   887   000023                     	ds	2
   888   000025                     vfpfcnvrt@convarg:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x24
   892   000025                     	ds	4
   893   000029                     vfpfcnvrt@cp:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x28
   897   000029                     	ds	2
   898   00002B                     ?_vfprintf:
   899                           	callstack 0
   900   00002B                     vfprintf@fp:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x2A
   904   00002B                     	ds	1
   905   00002C                     vfprintf@fmt:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x2B
   909   00002C                     	ds	2
   910   00002E                     vfprintf@ap:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x2D
   914   00002E                     	ds	1
   915   00002F                     vfprintf@cfmt:
   916                           	callstack 0
   917   00002F                     
   918                           ; 1 bytes @ 0x2E
   919   00002F                     	ds	2
   920   000031                     ?_sprintf:
   921                           	callstack 0
   922   000031                     sprintf@s:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0x30
   926   000031                     	ds	1
   927   000032                     sprintf@fmt:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x31
   931   000032                     	ds	4
   932   000036                     sprintf@ap:
   933                           	callstack 0
   934   000036                     
   935                           ; 1 bytes @ 0x35
   936   000036                     	ds	1
   937   000037                     sprintf@f:
   938                           	callstack 0
   939                           
   940                           ; 11 bytes @ 0x36
   941   000037                     	ds	11
   942   000042                     ??_main:
   943                           
   944                           ; 1 bytes @ 0x41
   945   000042                     	ds	5
   946                           
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 78 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  cmd             1   30[BANK0 ] unsigned char 
   957 ;;  uart_buf       20    0[BANK0 ] unsigned char [20]
   958 ;;  temp_str        5   20[BANK0 ] unsigned char [5]
   959 ;;  temp            2   33[BANK0 ] unsigned int 
   960 ;;  t               2   31[BANK0 ] int 
   961 ;;  adc             2   25[BANK0 ] unsigned int 
   962 ;;  pwm             1   29[BANK0 ] unsigned char 
   963 ;;  counter_uart    2    0        unsigned int 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         0       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0      35       0       0       0       0       0       0       0
   975 ;;      Temps:          5       0       0       0       0       0       0       0       0
   976 ;;      Totals:         5      35       0       0       0       0       0       0       0
   977 ;;Total ram usage:       40 bytes
   978 ;; Hardware stack levels required when called: 8
   979 ;; This function calls:
   980 ;;		_ADC_Init
   981 ;;		_BORRAR_LCD
   982 ;;		_ESCRIBE_MENSAJE
   983 ;;		_LCD_CONFIG
   984 ;;		_POS_CURSOR
   985 ;;		_PWM_Init
   986 ;;		_Read_Temperature
   987 ;;		_UART_Init
   988 ;;		_UART_Write_Text
   989 ;;		___awdiv
   990 ;;		_sprintf
   991 ;; This function is called by:
   992 ;;		Startup code after reset
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text0
   997   003B9A                     __ptext0:
   998                           	callstack 0
   999   003B9A                     _main:
  1000                           	callstack 23
  1001   003B9A                     
  1002                           ;main.c: 79:     TRISD = 0x00;
  1003   003B9A  6A95               	clrf	149,c	;volatile
  1004                           
  1005                           ;main.c: 80:     TRISE = 0x00;
  1006   003B9C  6A96               	clrf	150,c	;volatile
  1007   003B9E                     
  1008                           ;main.c: 82:     LCD_CONFIG();
  1009   003B9E  EC89  F01A         	call	_LCD_CONFIG	;wreg free
  1010   003BA2                     
  1011                           ;main.c: 83:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
  1012   003BA2  0E07               	movlw	7
  1013   003BA4  6E43               	movwf	(??_main+1)^0,c
  1014   003BA6  0E17               	movlw	23
  1015   003BA8  6E42               	movwf	??_main^0,c
  1016   003BAA  0E6A               	movlw	106
  1017   003BAC                     u1337:
  1018   003BAC  2EE8               	decfsz	wreg,f,c
  1019   003BAE  D7FE               	bra	u1337
  1020   003BB0  2E42               	decfsz	??_main^0,f,c
  1021   003BB2  D7FC               	bra	u1337
  1022   003BB4  2E43               	decfsz	(??_main+1)^0,f,c
  1023   003BB6  D7FA               	bra	u1337
  1024   003BB8  D000               	nop2	
  1025   003BBA                     
  1026                           ;main.c: 85:     BORRAR_LCD();
  1027   003BBA  EC0D  F019         	call	_BORRAR_LCD	;wreg free
  1028                           
  1029                           ;main.c: 86:     _delay((unsigned long)((5)*(48000000UL/4000.0)));
  1030   003BBE  0E4E               	movlw	78
  1031   003BC0  6E42               	movwf	??_main^0,c
  1032   003BC2  0EEB               	movlw	235
  1033   003BC4                     u1347:
  1034   003BC4  2EE8               	decfsz	wreg,f,c
  1035   003BC6  D7FE               	bra	u1347
  1036   003BC8  2E42               	decfsz	??_main^0,f,c
  1037   003BCA  D7FC               	bra	u1347
  1038   003BCC  0000               	nop	
  1039   003BCE                     
  1040                           ;main.c: 87:     POS_CURSOR(1, 1);
  1041   003BCE  0E01               	movlw	1
  1042   003BD0  6E04               	movwf	POS_CURSOR@columna^0,c
  1043   003BD2  0E01               	movlw	1
  1044   003BD4  ECD7  F019         	call	_POS_CURSOR
  1045   003BD8                     
  1046                           ;main.c: 88:     ESCRIBE_MENSAJE("Temperatura:", 12);
  1047   003BD8  0ED1               	movlw	low STR_1
  1048   003BDA  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
  1049   003BDC  0E3E               	movlw	high STR_1
  1050   003BDE  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
  1051   003BE0  0E0C               	movlw	12
  1052   003BE2  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
  1053   003BE4  EC33  F01A         	call	_ESCRIBE_MENSAJE	;wreg free
  1054   003BE8                     
  1055                           ;main.c: 89:     POS_CURSOR(2, 1);
  1056   003BE8  0E01               	movlw	1
  1057   003BEA  6E04               	movwf	POS_CURSOR@columna^0,c
  1058   003BEC  0E02               	movlw	2
  1059   003BEE  ECD7  F019         	call	_POS_CURSOR
  1060   003BF2                     
  1061                           ;main.c: 90:     ESCRIBE_MENSAJE("VENT:OFF", 8);
  1062   003BF2  0EE9               	movlw	low STR_2
  1063   003BF4  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
  1064   003BF6  0E3E               	movlw	high STR_2
  1065   003BF8  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
  1066   003BFA  0E08               	movlw	8
  1067   003BFC  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
  1068   003BFE  EC33  F01A         	call	_ESCRIBE_MENSAJE	;wreg free
  1069   003C02                     
  1070                           ;main.c: 92:     ADC_Init();
  1071   003C02  EC11  F019         	call	_ADC_Init	;wreg free
  1072   003C06                     
  1073                           ;main.c: 93:     PWM_Init();
  1074   003C06  EC19  F019         	call	_PWM_Init	;wreg free
  1075   003C0A                     
  1076                           ;main.c: 94:     UART_Init();
  1077   003C0A  EC24  F019         	call	_UART_Init	;wreg free
  1078   003C0E                     
  1079                           ;main.c: 95:     TRISDbits.TRISD0 = 0;
  1080   003C0E  9095               	bcf	149,0,c	;volatile
  1081   003C10                     l1972:
  1082                           
  1083                           ;main.c: 100:         unsigned int adc = Read_Temperature();
  1084   003C10  EC58  F019         	call	_Read_Temperature	;wreg free
  1085   003C14  C001  F079         	movff	?_Read_Temperature,main@adc
  1086   003C18  C002  F07A         	movff	?_Read_Temperature+1,main@adc+1
  1087   003C1C                     
  1088                           ;main.c: 101:         unsigned int temp = (adc * 500) / 1024;
  1089   003C1C  0EF4               	movlw	244
  1090   003C1E  6E42               	movwf	??_main^0,c
  1091   003C20  0E01               	movlw	1
  1092   003C22  6E43               	movwf	(??_main+1)^0,c
  1093   003C24  5042               	movf	??_main^0,w,c
  1094   003C26  0100               	movlb	0	; () banked
  1095   003C28  0379               	mulwf	main@adc& (0+255),b
  1096   003C2A  CFF3 F044          	movff	prodl,??_main+2
  1097   003C2E  CFF4 F045          	movff	prodh,??_main+3
  1098   003C32  037A               	mulwf	(main@adc+1)& (0+255),b
  1099   003C34  50F3               	movf	prodl,w,c
  1100   003C36  2645               	addwf	(??_main+3)^0,f,c
  1101   003C38  5043               	movf	(??_main+1)^0,w,c
  1102   003C3A  0379               	mulwf	main@adc& (0+255),b
  1103   003C3C  50F3               	movf	prodl,w,c
  1104   003C3E  2645               	addwf	(??_main+3)^0,f,c
  1105   003C40  0E0A               	movlw	10
  1106   003C42  6E46               	movwf	(??_main+4)^0,c
  1107   003C44                     u1145:
  1108   003C44  90D8               	bcf	status,0,c
  1109   003C46  3245               	rrcf	(??_main+3)^0,f,c
  1110   003C48  3244               	rrcf	(??_main+2)^0,f,c
  1111   003C4A  2E46               	decfsz	(??_main+4)^0,f,c
  1112   003C4C  EF22  F01E         	goto	u1145
  1113   003C50  C044  F081         	movff	??_main+2,main@temp
  1114   003C54  C045  F082         	movff	??_main+3,main@temp+1
  1115   003C58                     
  1116                           ; BSR set to: 0
  1117                           ;main.c: 104:         if (PIR1bits.RCIF) {
  1118   003C58  AA9E               	btfss	158,5,c	;volatile
  1119   003C5A  EF31  F01E         	goto	u1151
  1120   003C5E  EF33  F01E         	goto	u1150
  1121   003C62                     u1151:
  1122   003C62  EF70  F01E         	goto	l2000
  1123   003C66                     u1150:
  1124   003C66                     
  1125                           ; BSR set to: 0
  1126                           ;main.c: 105:             char cmd = RCREG;
  1127   003C66  CFAE F07E          	movff	4014,main@cmd	;volatile
  1128   003C6A                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 106:             if (cmd == '1') {
  1131   003C6A  0E31               	movlw	49
  1132   003C6C  197E               	xorwf	main@cmd& (0+255),w,b
  1133   003C6E  A4D8               	btfss	status,2,c
  1134   003C70  EF3C  F01E         	goto	u1161
  1135   003C74  EF3E  F01E         	goto	u1160
  1136   003C78                     u1161:
  1137   003C78  EF4A  F01E         	goto	l1986
  1138   003C7C                     u1160:
  1139   003C7C                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 107:                 override = 1;
  1142   003C7C  0E01               	movlw	1
  1143   003C7E  6F84               	movwf	_override& (0+255),b
  1144                           
  1145                           ;main.c: 108:                 manual_state = 1;
  1146   003C80  0E01               	movlw	1
  1147   003C82  6F83               	movwf	_manual_state& (0+255),b
  1148   003C84                     
  1149                           ; BSR set to: 0
  1150                           ;main.c: 109:                 UART_Write_Text("Override ON\r\n");
  1151   003C84  0EB6               	movlw	low STR_3
  1152   003C86  6E02               	movwf	UART_Write_Text@text^0,c
  1153   003C88  0E3E               	movlw	high STR_3
  1154   003C8A  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1155   003C8C  EC5A  F01A         	call	_UART_Write_Text	;wreg free
  1156                           
  1157                           ;main.c: 110:             } else if (cmd == '0') {
  1158   003C90  EF70  F01E         	goto	l2000
  1159   003C94                     l1986:
  1160                           
  1161                           ; BSR set to: 0
  1162   003C94  0E30               	movlw	48
  1163   003C96  197E               	xorwf	main@cmd& (0+255),w,b
  1164   003C98  A4D8               	btfss	status,2,c
  1165   003C9A  EF51  F01E         	goto	u1171
  1166   003C9E  EF53  F01E         	goto	u1170
  1167   003CA2                     u1171:
  1168   003CA2  EF5E  F01E         	goto	l1994
  1169   003CA6                     u1170:
  1170   003CA6                     
  1171                           ; BSR set to: 0
  1172                           ;main.c: 111:                 override = 1;
  1173   003CA6  0E01               	movlw	1
  1174   003CA8  6F84               	movwf	_override& (0+255),b
  1175   003CAA                     
  1176                           ; BSR set to: 0
  1177                           ;main.c: 112:                 manual_state = 0;
  1178   003CAA  6B83               	clrf	_manual_state& (0+255),b
  1179   003CAC                     
  1180                           ; BSR set to: 0
  1181                           ;main.c: 113:                 UART_Write_Text("Override OFF\r\n");
  1182   003CAC  0EA7               	movlw	low STR_4
  1183   003CAE  6E02               	movwf	UART_Write_Text@text^0,c
  1184   003CB0  0E3E               	movlw	high STR_4
  1185   003CB2  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1186   003CB4  EC5A  F01A         	call	_UART_Write_Text	;wreg free
  1187                           
  1188                           ;main.c: 114:             } else if (cmd == 'a') {
  1189   003CB8  EF70  F01E         	goto	l2000
  1190   003CBC                     l1994:
  1191                           
  1192                           ; BSR set to: 0
  1193   003CBC  0E61               	movlw	97
  1194   003CBE  197E               	xorwf	main@cmd& (0+255),w,b
  1195   003CC0  A4D8               	btfss	status,2,c
  1196   003CC2  EF65  F01E         	goto	u1181
  1197   003CC6  EF67  F01E         	goto	u1180
  1198   003CCA                     u1181:
  1199   003CCA  EF70  F01E         	goto	l101
  1200   003CCE                     u1180:
  1201   003CCE                     
  1202                           ; BSR set to: 0
  1203                           ;main.c: 115:                 override = 0;
  1204   003CCE  6B84               	clrf	_override& (0+255),b
  1205   003CD0                     
  1206                           ; BSR set to: 0
  1207                           ;main.c: 116:                 UART_Write_Text("Automatico\r\n");
  1208   003CD0  0EC4               	movlw	low STR_5
  1209   003CD2  6E02               	movwf	UART_Write_Text@text^0,c
  1210   003CD4  0E3E               	movlw	high STR_5
  1211   003CD6  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1212   003CD8  EC5A  F01A         	call	_UART_Write_Text	;wreg free
  1213   003CDC  EF70  F01E         	goto	l2000
  1214   003CE0                     l101:
  1215   003CE0                     l2000:
  1216                           
  1217                           ;main.c: 121:         if (override)
  1218   003CE0  0100               	movlb	0	; () banked
  1219   003CE2  5184               	movf	_override& (0+255),w,b
  1220   003CE4  B4D8               	btfsc	status,2,c
  1221   003CE6  EF77  F01E         	goto	u1191
  1222   003CEA  EF79  F01E         	goto	u1190
  1223   003CEE                     u1191:
  1224   003CEE  EF80  F01E         	goto	l2004
  1225   003CF2                     u1190:
  1226   003CF2                     
  1227                           ; BSR set to: 0
  1228                           ;main.c: 122:             LATDbits.LATD0 = manual_state;
  1229   003CF2  B183               	btfsc	_manual_state& (0+255),0,b
  1230   003CF4  D002               	bra	u1205
  1231   003CF6  908C               	bcf	140,0,c	;volatile
  1232   003CF8  D001               	bra	u1206
  1233   003CFA                     u1205:
  1234   003CFA  808C               	bsf	140,0,c	;volatile
  1235   003CFC                     u1206:
  1236   003CFC  EF93  F01E         	goto	l106
  1237   003D00                     l2004:
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;main.c: 124:             LATDbits.LATD0 = (temp > 30) ? 1 : 0;
  1241   003D00  5182               	movf	(main@temp+1)& (0+255),w,b
  1242   003D02  E107               	bnz	u1211
  1243   003D04  0E1F               	movlw	31
  1244   003D06  5D81               	subwf	main@temp& (0+255),w,b
  1245   003D08  B0D8               	btfsc	status,0,c
  1246   003D0A  EF89  F01E         	goto	u1211
  1247   003D0E  EF8D  F01E         	goto	u1210
  1248   003D12                     u1211:
  1249   003D12  6A42               	clrf	??_main^0,c
  1250   003D14  2A42               	incf	??_main^0,f,c
  1251   003D16  EF8E  F01E         	goto	u1228
  1252   003D1A                     u1210:
  1253   003D1A  6A42               	clrf	??_main^0,c
  1254   003D1C                     u1228:
  1255   003D1C  508C               	movf	140,w,c	;volatile
  1256   003D1E  1842               	xorwf	??_main^0,w,c
  1257   003D20  0BFE               	andlw	-2
  1258   003D22  1842               	xorwf	??_main^0,w,c
  1259   003D24  6E8C               	movwf	140,c	;volatile
  1260   003D26                     l106:
  1261                           
  1262                           ;main.c: 128:         int t = (temp < 20) ? 0 : (temp - 20);
  1263   003D26  0100               	movlb	0	; () banked
  1264   003D28  5182               	movf	(main@temp+1)& (0+255),w,b
  1265   003D2A  E109               	bnz	u1230
  1266   003D2C  0E14               	movlw	20
  1267   003D2E  5D81               	subwf	main@temp& (0+255),w,b
  1268   003D30  A0D8               	btfss	status,0,c
  1269   003D32  EF9D  F01E         	goto	u1231
  1270   003D36  EF9F  F01E         	goto	u1230
  1271   003D3A                     u1231:
  1272   003D3A  EFA7  F01E         	goto	l2008
  1273   003D3E                     u1230:
  1274   003D3E                     
  1275                           ; BSR set to: 0
  1276   003D3E  0EEC               	movlw	236
  1277   003D40  2581               	addwf	main@temp& (0+255),w,b
  1278   003D42  6F7F               	movwf	main@t& (0+255),b
  1279   003D44  0EFF               	movlw	255
  1280   003D46  2182               	addwfc	(main@temp+1)& (0+255),w,b
  1281   003D48  6F80               	movwf	(main@t+1)& (0+255),b
  1282   003D4A  EFAB  F01E         	goto	l2010
  1283   003D4E                     l2008:
  1284                           
  1285                           ; BSR set to: 0
  1286   003D4E  0E00               	movlw	0
  1287   003D50  6F80               	movwf	(main@t+1)& (0+255),b
  1288   003D52  0E00               	movlw	0
  1289   003D54  6F7F               	movwf	main@t& (0+255),b
  1290   003D56                     l2010:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;main.c: 129:         if (t > 30) t = 30;
  1294   003D56  BF80               	btfsc	(main@t+1)& (0+255),7,b
  1295   003D58  EFB7  F01E         	goto	u1241
  1296   003D5C  5180               	movf	(main@t+1)& (0+255),w,b
  1297   003D5E  E109               	bnz	u1240
  1298   003D60  0E1F               	movlw	31
  1299   003D62  5D7F               	subwf	main@t& (0+255),w,b
  1300   003D64  A0D8               	btfss	status,0,c
  1301   003D66  EFB7  F01E         	goto	u1241
  1302   003D6A  EFB9  F01E         	goto	u1240
  1303   003D6E                     u1241:
  1304   003D6E  EFBD  F01E         	goto	l2014
  1305   003D72                     u1240:
  1306   003D72                     
  1307                           ; BSR set to: 0
  1308   003D72  0E00               	movlw	0
  1309   003D74  6F80               	movwf	(main@t+1)& (0+255),b
  1310   003D76  0E1E               	movlw	30
  1311   003D78  6F7F               	movwf	main@t& (0+255),b
  1312   003D7A                     l2014:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;main.c: 130:         unsigned char pwm = (t * t * 255) / (30 * 30);
  1316   003D7A  517F               	movf	main@t& (0+255),w,b
  1317   003D7C  037F               	mulwf	main@t& (0+255),b
  1318   003D7E  CFF3 F042          	movff	prodl,??_main
  1319   003D82  CFF4 F043          	movff	prodh,??_main+1
  1320   003D86  0380               	mulwf	(main@t+1)& (0+255),b
  1321   003D88  50F3               	movf	prodl,w,c
  1322   003D8A  2643               	addwf	(??_main+1)^0,f,c
  1323   003D8C  5180               	movf	(main@t+1)& (0+255),w,b
  1324   003D8E  037F               	mulwf	main@t& (0+255),b
  1325   003D90  50F3               	movf	prodl,w,c
  1326   003D92  2643               	addwf	(??_main+1)^0,f,c
  1327   003D94  0EFF               	movlw	255
  1328   003D96  0242               	mulwf	??_main^0,c
  1329   003D98  CFF3 F044          	movff	prodl,??_main+2
  1330   003D9C  CFF4 F045          	movff	prodh,??_main+3
  1331   003DA0  0243               	mulwf	(??_main+1)^0,c
  1332   003DA2  50F3               	movf	prodl,w,c
  1333   003DA4  2645               	addwf	(??_main+3)^0,f,c
  1334   003DA6  C044  F001         	movff	??_main+2,___awdiv@dividend
  1335   003DAA  C045  F002         	movff	??_main+3,___awdiv@dividend+1
  1336   003DAE  0E03               	movlw	3
  1337   003DB0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1338   003DB2  0E84               	movlw	132
  1339   003DB4  6E03               	movwf	___awdiv@divisor^0,c
  1340   003DB6  EC39  F01C         	call	___awdiv	;wreg free
  1341   003DBA  5001               	movf	?___awdiv^0,w,c
  1342   003DBC  0100               	movlb	0	; () banked
  1343   003DBE  6F7D               	movwf	main@pwm& (0+255),b
  1344   003DC0                     
  1345                           ; BSR set to: 0
  1346                           ;main.c: 132:         CCPR1L = pwm >> 2;
  1347   003DC0  417D               	rrncf	main@pwm& (0+255),w,b
  1348   003DC2  42E8               	rrncf	wreg,f,c
  1349   003DC4  0B3F               	andlw	63
  1350   003DC6  6EBE               	movwf	190,c	;volatile
  1351   003DC8                     
  1352                           ; BSR set to: 0
  1353                           ;main.c: 133:         CCP1CONbits.DC1B = pwm & 0x03;
  1354   003DC8  C07D  F042         	movff	main@pwm,??_main
  1355   003DCC  0E03               	movlw	3
  1356   003DCE  1642               	andwf	??_main^0,f,c
  1357   003DD0  3A42               	swapf	??_main^0,f,c
  1358   003DD2  50BD               	movf	189,w,c	;volatile
  1359   003DD4  1842               	xorwf	??_main^0,w,c
  1360   003DD6  0BCF               	andlw	-49
  1361   003DD8  1842               	xorwf	??_main^0,w,c
  1362   003DDA  6EBD               	movwf	189,c	;volatile
  1363   003DDC                     
  1364                           ; BSR set to: 0
  1365                           ;main.c: 134:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
  1366   003DDC  0E07               	movlw	7
  1367   003DDE  6E43               	movwf	(??_main+1)^0,c
  1368   003DE0  0E17               	movlw	23
  1369   003DE2  6E42               	movwf	??_main^0,c
  1370   003DE4  0E6A               	movlw	106
  1371   003DE6                     u1357:
  1372   003DE6  2EE8               	decfsz	wreg,f,c
  1373   003DE8  D7FE               	bra	u1357
  1374   003DEA  2E42               	decfsz	??_main^0,f,c
  1375   003DEC  D7FC               	bra	u1357
  1376   003DEE  2E43               	decfsz	(??_main+1)^0,f,c
  1377   003DF0  D7FA               	bra	u1357
  1378   003DF2  D000               	nop2	
  1379   003DF4                     
  1380                           ;main.c: 137:         POS_CURSOR(1, 13);
  1381   003DF4  0E0D               	movlw	13
  1382   003DF6  6E04               	movwf	POS_CURSOR@columna^0,c
  1383   003DF8  0E01               	movlw	1
  1384   003DFA  ECD7  F019         	call	_POS_CURSOR
  1385   003DFE                     
  1386                           ;main.c: 138:         char temp_str[5];;main.c: 139:         sprintf(temp_str, "%3dC", t
      +                          emp);
  1387   003DFE  0E74               	movlw	low main@temp_str
  1388   003E00  6E31               	movwf	sprintf@s^0,c
  1389   003E02  0EF2               	movlw	low STR_6
  1390   003E04  6E32               	movwf	sprintf@fmt^0,c
  1391   003E06  0E3E               	movlw	high STR_6
  1392   003E08  6E33               	movwf	(sprintf@fmt+1)^0,c
  1393   003E0A  C081  F034         	movff	main@temp,?_sprintf+3
  1394   003E0E  C082  F035         	movff	main@temp+1,?_sprintf+4
  1395   003E12  ECBB  F019         	call	_sprintf	;wreg free
  1396   003E16                     
  1397                           ;main.c: 140:         ESCRIBE_MENSAJE(temp_str, 4);
  1398   003E16  0E74               	movlw	low main@temp_str
  1399   003E18  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
  1400   003E1A  6A05               	clrf	(ESCRIBE_MENSAJE@cadena+1)^0,c
  1401   003E1C  0E04               	movlw	4
  1402   003E1E  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
  1403   003E20  EC33  F01A         	call	_ESCRIBE_MENSAJE	;wreg free
  1404   003E24                     
  1405                           ;main.c: 143:         POS_CURSOR(2, 6);
  1406   003E24  0E06               	movlw	6
  1407   003E26  6E04               	movwf	POS_CURSOR@columna^0,c
  1408   003E28  0E02               	movlw	2
  1409   003E2A  ECD7  F019         	call	_POS_CURSOR
  1410   003E2E                     
  1411                           ;main.c: 144:         ESCRIBE_MENSAJE(LATDbits.LATD0 ? "ON " : "OFF", 3);
  1412   003E2E  B08C               	btfsc	140,0,c	;volatile
  1413   003E30  EF1C  F01F         	goto	u1251
  1414   003E34  EF1E  F01F         	goto	u1250
  1415   003E38                     u1251:
  1416   003E38  EF25  F01F         	goto	l2034
  1417   003E3C                     u1250:
  1418   003E3C  0EEE               	movlw	low (STR_2+5)
  1419   003E3E  0100               	movlb	0	; () banked
  1420   003E40  6F7B               	movwf	_main$655& (0+255),b
  1421   003E42  0E3E               	movlw	high (STR_2+5)
  1422   003E44  6F7C               	movwf	(_main$655+1)& (0+255),b
  1423   003E46  EF2A  F01F         	goto	l2036
  1424   003E4A                     l2034:
  1425   003E4A  0EF7               	movlw	low STR_7
  1426   003E4C  0100               	movlb	0	; () banked
  1427   003E4E  6F7B               	movwf	_main$655& (0+255),b
  1428   003E50  0E3E               	movlw	high STR_7
  1429   003E52  6F7C               	movwf	(_main$655+1)& (0+255),b
  1430   003E54                     l2036:
  1431                           
  1432                           ; BSR set to: 0
  1433   003E54  C07B  F004         	movff	_main$655,ESCRIBE_MENSAJE@cadena
  1434   003E58  C07C  F005         	movff	_main$655+1,ESCRIBE_MENSAJE@cadena+1
  1435   003E5C  0E03               	movlw	3
  1436   003E5E  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
  1437   003E60  EC33  F01A         	call	_ESCRIBE_MENSAJE	;wreg free
  1438   003E64                     
  1439                           ;main.c: 147:         char uart_buf[20];;main.c: 148:         sprintf(uart_buf, "Temp=%d
      +                          C\r\n", temp);
  1440   003E64  0E60               	movlw	low main@uart_buf
  1441   003E66  6E31               	movwf	sprintf@s^0,c
  1442   003E68  0EDE               	movlw	low STR_9
  1443   003E6A  6E32               	movwf	sprintf@fmt^0,c
  1444   003E6C  0E3E               	movlw	high STR_9
  1445   003E6E  6E33               	movwf	(sprintf@fmt+1)^0,c
  1446   003E70  C081  F034         	movff	main@temp,?_sprintf+3
  1447   003E74  C082  F035         	movff	main@temp+1,?_sprintf+4
  1448   003E78  ECBB  F019         	call	_sprintf	;wreg free
  1449   003E7C                     
  1450                           ;main.c: 149:         UART_Write_Text(uart_buf);
  1451   003E7C  0E60               	movlw	low main@uart_buf
  1452   003E7E  6E02               	movwf	UART_Write_Text@text^0,c
  1453   003E80  6A03               	clrf	(UART_Write_Text@text+1)^0,c
  1454   003E82  EC5A  F01A         	call	_UART_Write_Text	;wreg free
  1455   003E86                     
  1456                           ;main.c: 152:         _delay((unsigned long)((500)*(48000000UL/4000.0)));
  1457   003E86  0E1F               	movlw	31
  1458   003E88  6E43               	movwf	(??_main+1)^0,c
  1459   003E8A  0E71               	movlw	113
  1460   003E8C  6E42               	movwf	??_main^0,c
  1461   003E8E  0E1E               	movlw	30
  1462   003E90                     u1367:
  1463   003E90  2EE8               	decfsz	wreg,f,c
  1464   003E92  D7FE               	bra	u1367
  1465   003E94  2E42               	decfsz	??_main^0,f,c
  1466   003E96  D7FC               	bra	u1367
  1467   003E98  2E43               	decfsz	(??_main+1)^0,f,c
  1468   003E9A  D7FA               	bra	u1367
  1469   003E9C  D000               	nop2	
  1470   003E9E  EF08  F01E         	goto	l1972
  1471   003EA2  EF7E  F01F         	goto	start
  1472   003EA6                     __end_of_main:
  1473                           	callstack 0
  1474                           
  1475 ;; *************** function _sprintf *****************
  1476 ;; Defined at:
  1477 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  s               1   48[COMRAM] PTR unsigned char 
  1480 ;;		 -> main@uart_buf(20), main@temp_str(5), 
  1481 ;;  fmt             2   49[COMRAM] PTR const unsigned char 
  1482 ;;		 -> STR_9(11), STR_6(5), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  f              11   54[COMRAM] struct _IO_FILE
  1485 ;;  ret             2    0        int 
  1486 ;;  ap              1   53[COMRAM] PTR void [1]
  1487 ;;		 -> ?_sprintf(2), 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2   48[COMRAM] int 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         5       0       0       0       0       0       0       0       0
  1498 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1500 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1501 ;;Total ram usage:       17 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 7
  1504 ;; This function calls:
  1505 ;;		_vfprintf
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text1
  1512   003376                     __ptext1:
  1513                           	callstack 0
  1514   003376                     _sprintf:
  1515                           	callstack 23
  1516   003376  0E34               	movlw	low (?_sprintf+3)
  1517   003378  6E36               	movwf	sprintf@ap^0,c
  1518   00337A  C031  F037         	movff	sprintf@s,sprintf@f
  1519   00337E  0E00               	movlw	0
  1520   003380  6E3A               	movwf	(sprintf@f+3)^0,c
  1521   003382  0E00               	movlw	0
  1522   003384  6E39               	movwf	(sprintf@f+2)^0,c
  1523   003386  0E00               	movlw	0
  1524   003388  6E41               	movwf	(sprintf@f+10)^0,c
  1525   00338A  0E00               	movlw	0
  1526   00338C  6E40               	movwf	(sprintf@f+9)^0,c
  1527   00338E  0E37               	movlw	low sprintf@f
  1528   003390  6E2B               	movwf	vfprintf@fp^0,c
  1529   003392  C032  F02C         	movff	sprintf@fmt,vfprintf@fmt
  1530   003396  C033  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1531   00339A  0E36               	movlw	low sprintf@ap
  1532   00339C  6E2E               	movwf	vfprintf@ap^0,c
  1533   00339E  EC12  F01A         	call	_vfprintf	;wreg free
  1534   0033A2  5031               	movf	sprintf@s^0,w,c
  1535   0033A4  2439               	addwf	(sprintf@f+2)^0,w,c
  1536   0033A6  6ED9               	movwf	fsr2l,c
  1537   0033A8  6ADA               	clrf	fsr2h,c
  1538   0033AA  6ADF               	clrf	indf2,c
  1539   0033AC  0012               	return		;funcret
  1540   0033AE                     __end_of_sprintf:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _vfprintf *****************
  1544 ;; Defined at:
  1545 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  1548 ;;		 -> sprintf@f(11), 
  1549 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  1550 ;;		 -> STR_9(11), STR_6(5), 
  1551 ;;  ap              1   45[COMRAM] PTR PTR void 
  1552 ;;		 -> sprintf@ap(1), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  cfmt            2   46[COMRAM] PTR unsigned char 
  1555 ;;		 -> STR_9(11), STR_6(5), 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  2   42[COMRAM] int 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         4       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1568 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:        6 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 6
  1572 ;; This function calls:
  1573 ;;		_vfpfcnvrt
  1574 ;; This function is called by:
  1575 ;;		_sprintf
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text2
  1580   003424                     __ptext2:
  1581                           	callstack 0
  1582   003424                     _vfprintf:
  1583                           	callstack 23
  1584   003424                     
  1585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1586   003424  C02C  F02F         	movff	vfprintf@fmt,vfprintf@cfmt
  1587   003428  C02D  F030         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1590   00342C  EF20  F01A         	goto	l1844
  1591   003430                     l1842:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1594   003430  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  1595   003434  0E2F               	movlw	low vfprintf@cfmt
  1596   003436  6E21               	movwf	vfpfcnvrt@fmt^0,c
  1597   003438  C02E  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  1598   00343C  EC9A  F01C         	call	_vfpfcnvrt	;wreg free
  1599   003440                     l1844:
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1602   003440  C02F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1603   003444  C030  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1604   003448                     	if	0	;tblptru may be non-zero
  1605   003448                     	endif
  1606   003448                     	if	0	;tblptru may be non-zero
  1607   003448                     	endif
  1608   003448  0008               	tblrd		*
  1609   00344A  50F5               	movf	tablat,w,c
  1610   00344C  0900               	iorlw	0
  1611   00344E  A4D8               	btfss	status,2,c
  1612   003450  EF2C  F01A         	goto	u1051
  1613   003454  EF2E  F01A         	goto	u1050
  1614   003458                     u1051:
  1615   003458  EF18  F01A         	goto	l1842
  1616   00345C                     u1050:
  1617   00345C                     
  1618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1619   00345C  0E00               	movlw	0
  1620   00345E  6E2C               	movwf	(?_vfprintf+1)^0,c
  1621   003460  0E00               	movlw	0
  1622   003462  6E2B               	movwf	?_vfprintf^0,c
  1623   003464  0012               	return		;funcret
  1624   003466                     __end_of_vfprintf:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _vfpfcnvrt *****************
  1628 ;; Defined at:
  1629 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  1632 ;;		 -> sprintf@f(11), 
  1633 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  1634 ;;		 -> vfprintf@cfmt(2), 
  1635 ;;  ap              1   33[COMRAM] PTR PTR void 
  1636 ;;		 -> sprintf@ap(1), 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  convarg         4   36[COMRAM] struct .
  1639 ;;  cp              2   40[COMRAM] PTR unsigned char 
  1640 ;;		 -> STR_9(11), STR_6(5), 
  1641 ;;  done            1    0        _Bool 
  1642 ;;  c               1    0        unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         3       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1654 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1655 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1656 ;;Total ram usage:       11 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 5
  1659 ;; This function calls:
  1660 ;;		_dtoa
  1661 ;;		_fputc
  1662 ;;		_read_prec_or_width
  1663 ;; This function is called by:
  1664 ;;		_vfprintf
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text3
  1669   003934                     __ptext3:
  1670                           	callstack 0
  1671   003934                     _vfpfcnvrt:
  1672                           	callstack 23
  1673   003934                     
  1674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1675   003934  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1676   003936  6ED9               	movwf	fsr2l,c
  1677   003938  6ADA               	clrf	fsr2h,c
  1678   00393A  CFDE FFF6          	movff	postinc2,tblptrl
  1679   00393E  CFDD FFF7          	movff	postdec2,tblptrh
  1680   003942                     	if	0	;tblptru may be non-zero
  1681   003942                     	endif
  1682   003942                     	if	0	;tblptru may be non-zero
  1683   003942                     	endif
  1684   003942  0008               	tblrd		*
  1685   003944  50F5               	movf	tablat,w,c
  1686   003946  0A25               	xorlw	37
  1687   003948  A4D8               	btfss	status,2,c
  1688   00394A  EFA9  F01C         	goto	u1001
  1689   00394E  EFAB  F01C         	goto	u1000
  1690   003952                     u1001:
  1691   003952  EF1D  F01D         	goto	l1786
  1692   003956                     u1000:
  1693   003956                     
  1694                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1695   003956  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1696   003958  6ED9               	movwf	fsr2l,c
  1697   00395A  6ADA               	clrf	fsr2h,c
  1698   00395C  2ADE               	incf	postinc2,f,c
  1699   00395E  0E00               	movlw	0
  1700   003960  22DD               	addwfc	postdec2,f,c
  1701   003962                     
  1702                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1703   003962  0E00               	movlw	0
  1704   003964  6E48               	movwf	(_width+1)^0,c
  1705   003966  0E00               	movlw	0
  1706   003968  6E47               	movwf	_width^0,c
  1707   00396A  C047  F04B         	movff	_width,_flags
  1708   00396E                     
  1709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1710   00396E  6849               	setf	_prec^0,c
  1711   003970  684A               	setf	(_prec+1)^0,c
  1712   003972                     
  1713                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1714   003972  C021  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1715   003976  C022  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1716   00397A  EC8C  F01B         	call	_read_prec_or_width	;wreg free
  1717   00397E  C001  F047         	movff	?_read_prec_or_width,_width
  1718   003982  C002  F048         	movff	?_read_prec_or_width+1,_width+1
  1719   003986                     
  1720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1721   003986  BE48               	btfsc	(_width+1)^0,7,c
  1722   003988  EFCA  F01C         	goto	u1010
  1723   00398C  EFC8  F01C         	goto	u1011
  1724   003990                     u1011:
  1725   003990  EFCF  F01C         	goto	l1768
  1726   003994                     u1010:
  1727   003994                     
  1728                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1729   003994  804B               	bsf	_flags^0,0,c
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1732   003996  6C47               	negf	_width^0,c
  1733   003998  1E48               	comf	(_width+1)^0,f,c
  1734   00399A  B0D8               	btfsc	status,0,c
  1735   00399C  2A48               	incf	(_width+1)^0,f,c
  1736   00399E                     l1768:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1739   00399E  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1740   0039A0  6ED9               	movwf	fsr2l,c
  1741   0039A2  6ADA               	clrf	fsr2h,c
  1742   0039A4  CFDE F029          	movff	postinc2,vfpfcnvrt@cp
  1743   0039A8  CFDD F02A          	movff	postdec2,vfpfcnvrt@cp+1
  1744   0039AC                     
  1745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1746   0039AC  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1747   0039B0  C02A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1748   0039B4                     	if	0	;tblptru may be non-zero
  1749   0039B4                     	endif
  1750   0039B4                     	if	0	;tblptru may be non-zero
  1751   0039B4                     	endif
  1752   0039B4  0008               	tblrd		*
  1753   0039B6  50F5               	movf	tablat,w,c
  1754   0039B8  0A64               	xorlw	100
  1755   0039BA  B4D8               	btfsc	status,2,c
  1756   0039BC  EFE2  F01C         	goto	u1021
  1757   0039C0  EFE4  F01C         	goto	u1020
  1758   0039C4                     u1021:
  1759   0039C4  EFF2  F01C         	goto	l1774
  1760   0039C8                     u1020:
  1761   0039C8  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1762   0039CC  C02A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1763   0039D0                     	if	0	;tblptru may be non-zero
  1764   0039D0                     	endif
  1765   0039D0                     	if	0	;tblptru may be non-zero
  1766   0039D0                     	endif
  1767   0039D0  0008               	tblrd		*
  1768   0039D2  50F5               	movf	tablat,w,c
  1769   0039D4  0A69               	xorlw	105
  1770   0039D6  A4D8               	btfss	status,2,c
  1771   0039D8  EFF0  F01C         	goto	u1031
  1772   0039DC  EFF2  F01C         	goto	u1030
  1773   0039E0                     u1031:
  1774   0039E0  EF15  F01D         	goto	l1782
  1775   0039E4                     u1030:
  1776   0039E4                     l1774:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1779   0039E4  5022               	movf	vfpfcnvrt@ap^0,w,c
  1780   0039E6  6ED9               	movwf	fsr2l,c
  1781   0039E8  6ADA               	clrf	fsr2h,c
  1782   0039EA  0E02               	movlw	2
  1783   0039EC  26DF               	addwf	indf2,f,c
  1784   0039EE  5CDF               	subwf	indf2,w,c
  1785   0039F0  6ED9               	movwf	fsr2l,c
  1786   0039F2  6ADA               	clrf	fsr2h,c
  1787   0039F4  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  1788   0039F8  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  1789   0039FC                     
  1790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1791   0039FC  0E01               	movlw	1
  1792   0039FE  2429               	addwf	vfpfcnvrt@cp^0,w,c
  1793   003A00  6E23               	movwf	??_vfpfcnvrt^0,c
  1794   003A02  0E00               	movlw	0
  1795   003A04  202A               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1796   003A06  6E24               	movwf	(??_vfpfcnvrt+1)^0,c
  1797   003A08  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1798   003A0A  6ED9               	movwf	fsr2l,c
  1799   003A0C  6ADA               	clrf	fsr2h,c
  1800   003A0E  C023  FFDE         	movff	??_vfpfcnvrt,postinc2
  1801   003A12  C024  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1802   003A16                     
  1803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1804   003A16  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  1805   003A1A  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  1806   003A1E  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1807   003A22  EC2F  F01D         	call	_dtoa	;wreg free
  1808   003A26  EF2E  F01D         	goto	l928
  1809   003A2A                     l1782:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1812   003A2A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1813   003A2C  6ED9               	movwf	fsr2l,c
  1814   003A2E  6ADA               	clrf	fsr2h,c
  1815   003A30  2ADE               	incf	postinc2,f,c
  1816   003A32  0E00               	movlw	0
  1817   003A34  22DD               	addwfc	postdec2,f,c
  1818   003A36  EF2E  F01D         	goto	l928
  1819   003A3A                     l1786:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1822   003A3A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1823   003A3C  6ED9               	movwf	fsr2l,c
  1824   003A3E  6ADA               	clrf	fsr2h,c
  1825   003A40  CFDE FFF6          	movff	postinc2,tblptrl
  1826   003A44  CFDD FFF7          	movff	postdec2,tblptrh
  1827   003A48                     	if	0	;tblptru may be non-zero
  1828   003A48                     	endif
  1829   003A48                     	if	0	;tblptru may be non-zero
  1830   003A48                     	endif
  1831   003A48  0008               	tblrd		*
  1832   003A4A  50F5               	movf	tablat,w,c
  1833   003A4C  6E01               	movwf	fputc@c^0,c
  1834   003A4E  6A02               	clrf	(fputc@c+1)^0,c
  1835   003A50  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1836   003A54  EC37  F01B         	call	_fputc	;wreg free
  1837   003A58  EF15  F01D         	goto	l1782
  1838   003A5C                     l928:
  1839   003A5C  0012               	return		;funcret
  1840   003A5E                     __end_of_vfpfcnvrt:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _read_prec_or_width *****************
  1844 ;; Defined at:
  1845 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  1848 ;;		 -> vfprintf@cfmt(2), 
  1849 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  1850 ;;		 -> sprintf@ap(1), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  c               1    4[COMRAM] unsigned char 
  1853 ;;  n               2    5[COMRAM] int 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2    0[COMRAM] int 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         2       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1865 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1866 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1867 ;;Total ram usage:        7 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_vfpfcnvrt
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text4
  1877   003718                     __ptext4:
  1878                           	callstack 0
  1879   003718                     _read_prec_or_width:
  1880                           	callstack 27
  1881   003718                     
  1882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1883   003718  0E00               	movlw	0
  1884   00371A  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  1885   00371C  0E00               	movlw	0
  1886   00371E  6E06               	movwf	read_prec_or_width@n^0,c
  1887   003720                     
  1888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1889   003720  5001               	movf	read_prec_or_width@fmt^0,w,c
  1890   003722  6ED9               	movwf	fsr2l,c
  1891   003724  6ADA               	clrf	fsr2h,c
  1892   003726  CFDE FFF6          	movff	postinc2,tblptrl
  1893   00372A  CFDD FFF7          	movff	postdec2,tblptrh
  1894   00372E                     	if	0	;tblptru may be non-zero
  1895   00372E                     	endif
  1896   00372E                     	if	0	;tblptru may be non-zero
  1897   00372E                     	endif
  1898   00372E  0008               	tblrd		*
  1899   003730  50F5               	movf	tablat,w,c
  1900   003732  0A2A               	xorlw	42
  1901   003734  A4D8               	btfss	status,2,c
  1902   003736  EF9F  F01B         	goto	u971
  1903   00373A  EFA1  F01B         	goto	u970
  1904   00373E                     u971:
  1905   00373E  EFCA  F01B         	goto	l1706
  1906   003742                     u970:
  1907   003742                     
  1908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1909   003742  5001               	movf	read_prec_or_width@fmt^0,w,c
  1910   003744  6ED9               	movwf	fsr2l,c
  1911   003746  6ADA               	clrf	fsr2h,c
  1912   003748  2ADE               	incf	postinc2,f,c
  1913   00374A  0E00               	movlw	0
  1914   00374C  22DD               	addwfc	postdec2,f,c
  1915   00374E                     
  1916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1917   00374E  5002               	movf	read_prec_or_width@ap^0,w,c
  1918   003750  6ED9               	movwf	fsr2l,c
  1919   003752  6ADA               	clrf	fsr2h,c
  1920   003754  0E02               	movlw	2
  1921   003756  26DF               	addwf	indf2,f,c
  1922   003758  5CDF               	subwf	indf2,w,c
  1923   00375A  6ED9               	movwf	fsr2l,c
  1924   00375C  6ADA               	clrf	fsr2h,c
  1925   00375E  CFDE F006          	movff	postinc2,read_prec_or_width@n
  1926   003762  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1929   003766  EFDD  F01B         	goto	l916
  1930   00376A                     l1702:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1933   00376A  0E0A               	movlw	10
  1934   00376C  0206               	mulwf	read_prec_or_width@n^0,c
  1935   00376E  CFF3 F003          	movff	prodl,??_read_prec_or_width
  1936   003772  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  1937   003776  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  1938   003778  50F3               	movf	prodl,w,c
  1939   00377A  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  1940   00377C  5005               	movf	read_prec_or_width@c^0,w,c
  1941   00377E  2403               	addwf	??_read_prec_or_width^0,w,c
  1942   003780  6E06               	movwf	read_prec_or_width@n^0,c
  1943   003782  0E00               	movlw	0
  1944   003784  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  1945   003786  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  1946   003788                     
  1947                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1948   003788  5001               	movf	read_prec_or_width@fmt^0,w,c
  1949   00378A  6ED9               	movwf	fsr2l,c
  1950   00378C  6ADA               	clrf	fsr2h,c
  1951   00378E  2ADE               	incf	postinc2,f,c
  1952   003790  0E00               	movlw	0
  1953   003792  22DD               	addwfc	postdec2,f,c
  1954   003794                     l1706:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1957   003794  5001               	movf	read_prec_or_width@fmt^0,w,c
  1958   003796  6ED9               	movwf	fsr2l,c
  1959   003798  6ADA               	clrf	fsr2h,c
  1960   00379A  CFDE FFF6          	movff	postinc2,tblptrl
  1961   00379E  CFDD FFF7          	movff	postdec2,tblptrh
  1962   0037A2                     	if	0	;tblptru may be non-zero
  1963   0037A2                     	endif
  1964   0037A2                     	if	0	;tblptru may be non-zero
  1965   0037A2                     	endif
  1966   0037A2  0008               	tblrd		*
  1967   0037A4  50F5               	movf	tablat,w,c
  1968   0037A6  0FD0               	addlw	208
  1969   0037A8  6E05               	movwf	read_prec_or_width@c^0,c
  1970   0037AA  0E09               	movlw	9
  1971   0037AC  6405               	cpfsgt	read_prec_or_width@c^0,c
  1972   0037AE  EFDB  F01B         	goto	u981
  1973   0037B2  EFDD  F01B         	goto	u980
  1974   0037B6                     u981:
  1975   0037B6  EFB5  F01B         	goto	l1702
  1976   0037BA                     u980:
  1977   0037BA                     l916:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1980   0037BA  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  1981   0037BE  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1982   0037C2  0012               	return		;funcret
  1983   0037C4                     __end_of_read_prec_or_width:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _dtoa *****************
  1987 ;; Defined at:
  1988 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  1991 ;;		 -> sprintf@f(11), 
  1992 ;;  d               2   21[COMRAM] int 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  i               2   29[COMRAM] int 
  1995 ;;  w               2   25[COMRAM] int 
  1996 ;;  s               1   28[COMRAM] unsigned char 
  1997 ;;  p               1   27[COMRAM] _Bool 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         3       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2010 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:       11 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 4
  2014 ;; This function calls:
  2015 ;;		___awdiv
  2016 ;;		___awmod
  2017 ;;		_abs
  2018 ;;		_pad
  2019 ;; This function is called by:
  2020 ;;		_vfpfcnvrt
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text5
  2025   003A5E                     __ptext5:
  2026                           	callstack 0
  2027   003A5E                     _dtoa:
  2028                           	callstack 23
  2029   003A5E                     
  2030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2031   003A5E  0E01               	movlw	1
  2032   003A60  6E1C               	movwf	dtoa@p^0,c
  2033   003A62                     
  2034                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2035   003A62  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2036   003A64  EF36  F01D         	goto	u891
  2037   003A68  EF39  F01D         	goto	u890
  2038   003A6C                     u891:
  2039   003A6C  0E01               	movlw	1
  2040   003A6E  EF3A  F01D         	goto	u900
  2041   003A72                     u890:
  2042   003A72  0E00               	movlw	0
  2043   003A74                     u900:
  2044   003A74  6E1D               	movwf	dtoa@s^0,c
  2045   003A76                     
  2046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2047   003A76  C047  F01A         	movff	_width,dtoa@w
  2048   003A7A  C048  F01B         	movff	_width+1,dtoa@w+1
  2049   003A7E                     
  2050                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  2051   003A7E  501D               	movf	dtoa@s^0,w,c
  2052   003A80  B4D8               	btfsc	status,2,c
  2053   003A82  EF45  F01D         	goto	u911
  2054   003A86  EF47  F01D         	goto	u910
  2055   003A8A                     u911:
  2056   003A8A  EF5E  F01D         	goto	l901
  2057   003A8E                     u910:
  2058   003A8E                     
  2059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  2060   003A8E  061A               	decf	dtoa@w^0,f,c
  2061   003A90  A0D8               	btfss	status,0,c
  2062   003A92  061B               	decf	(dtoa@w+1)^0,f,c
  2063   003A94                     
  2064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2065   003A94  501D               	movf	dtoa@s^0,w,c
  2066   003A96  A4D8               	btfss	status,2,c
  2067   003A98  EF50  F01D         	goto	u921
  2068   003A9C  EF52  F01D         	goto	u920
  2069   003AA0                     u921:
  2070   003AA0  EF58  F01D         	goto	l1662
  2071   003AA4                     u920:
  2072   003AA4  0E00               	movlw	0
  2073   003AA6  6E19               	movwf	(_dtoa$1251+1)^0,c
  2074   003AA8  0E2B               	movlw	43
  2075   003AAA  6E18               	movwf	_dtoa$1251^0,c
  2076   003AAC  EF5C  F01D         	goto	l1664
  2077   003AB0                     l1662:
  2078   003AB0  0E00               	movlw	0
  2079   003AB2  6E19               	movwf	(_dtoa$1251+1)^0,c
  2080   003AB4  0E2D               	movlw	45
  2081   003AB6  6E18               	movwf	_dtoa$1251^0,c
  2082   003AB8                     l1664:
  2083   003AB8  C018  F01D         	movff	_dtoa$1251,dtoa@s
  2084   003ABC                     l901:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2087   003ABC  0E00               	movlw	0
  2088   003ABE  6E1F               	movwf	(dtoa@i+1)^0,c
  2089   003AC0  0E1F               	movlw	31
  2090   003AC2  6E1E               	movwf	dtoa@i^0,c
  2091   003AC4                     
  2092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2093   003AC4  0100               	movlb	0	; () banked
  2094   003AC6  6BA4               	clrf	(_dbuf+31)& (0+255),b
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2097   003AC8  EF92  F01D         	goto	l1678
  2098   003ACC                     l1668:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  2101   003ACC  061E               	decf	dtoa@i^0,f,c
  2102   003ACE  A0D8               	btfss	status,0,c
  2103   003AD0  061F               	decf	(dtoa@i+1)^0,f,c
  2104   003AD2                     
  2105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2106   003AD2  501E               	movf	dtoa@i^0,w,c
  2107   003AD4  0F85               	addlw	low _dbuf
  2108   003AD6  6ED9               	movwf	fsr2l,c
  2109   003AD8  6ADA               	clrf	fsr2h,c
  2110   003ADA  C016  F001         	movff	dtoa@d,___awmod@dividend
  2111   003ADE  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2112   003AE2  0E00               	movlw	0
  2113   003AE4  6E04               	movwf	(___awmod@divisor+1)^0,c
  2114   003AE6  0E0A               	movlw	10
  2115   003AE8  6E03               	movwf	___awmod@divisor^0,c
  2116   003AEA  ECE2  F01B         	call	___awmod	;wreg free
  2117   003AEE  C001  F007         	movff	?___awmod,abs@a
  2118   003AF2  C002  F008         	movff	?___awmod+1,abs@a+1
  2119   003AF6  ECA1  F019         	call	_abs	;wreg free
  2120   003AFA  5007               	movf	?_abs^0,w,c
  2121   003AFC  0F30               	addlw	48
  2122   003AFE  6EDF               	movwf	indf2,c
  2123   003B00                     
  2124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2125   003B00  6A1C               	clrf	dtoa@p^0,c
  2126   003B02                     
  2127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  2128   003B02  061A               	decf	dtoa@w^0,f,c
  2129   003B04  A0D8               	btfss	status,0,c
  2130   003B06  061B               	decf	(dtoa@w+1)^0,f,c
  2131   003B08                     
  2132                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2133   003B08  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2134   003B0C  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2135   003B10  0E00               	movlw	0
  2136   003B12  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2137   003B14  0E0A               	movlw	10
  2138   003B16  6E03               	movwf	___awdiv@divisor^0,c
  2139   003B18  EC39  F01C         	call	___awdiv	;wreg free
  2140   003B1C  C001  F016         	movff	?___awdiv,dtoa@d
  2141   003B20  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2142   003B24                     l1678:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2145   003B24  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2146   003B26  EF9D  F01D         	goto	u931
  2147   003B2A  501F               	movf	(dtoa@i+1)^0,w,c
  2148   003B2C  E108               	bnz	u930
  2149   003B2E  041E               	decf	dtoa@i^0,w,c
  2150   003B30  A0D8               	btfss	status,0,c
  2151   003B32  EF9D  F01D         	goto	u931
  2152   003B36  EF9F  F01D         	goto	u930
  2153   003B3A                     u931:
  2154   003B3A  EFB0  F01D         	goto	l1684
  2155   003B3E                     u930:
  2156   003B3E  5016               	movf	dtoa@d^0,w,c
  2157   003B40  1017               	iorwf	(dtoa@d+1)^0,w,c
  2158   003B42  A4D8               	btfss	status,2,c
  2159   003B44  EFA6  F01D         	goto	u941
  2160   003B48  EFA8  F01D         	goto	u940
  2161   003B4C                     u941:
  2162   003B4C  EF66  F01D         	goto	l1668
  2163   003B50                     u940:
  2164   003B50  501C               	movf	dtoa@p^0,w,c
  2165   003B52  A4D8               	btfss	status,2,c
  2166   003B54  EFAE  F01D         	goto	u951
  2167   003B58  EFB0  F01D         	goto	u950
  2168   003B5C                     u951:
  2169   003B5C  EF66  F01D         	goto	l1668
  2170   003B60                     u950:
  2171   003B60                     l1684:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2174   003B60  501D               	movf	dtoa@s^0,w,c
  2175   003B62  B4D8               	btfsc	status,2,c
  2176   003B64  EFB6  F01D         	goto	u961
  2177   003B68  EFB8  F01D         	goto	u960
  2178   003B6C                     u961:
  2179   003B6C  EFC1  F01D         	goto	l1690
  2180   003B70                     u960:
  2181   003B70                     
  2182                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  2183   003B70  061E               	decf	dtoa@i^0,f,c
  2184   003B72  A0D8               	btfss	status,0,c
  2185   003B74  061F               	decf	(dtoa@i+1)^0,f,c
  2186   003B76                     
  2187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2188   003B76  501E               	movf	dtoa@i^0,w,c
  2189   003B78  0F85               	addlw	low _dbuf
  2190   003B7A  6ED9               	movwf	fsr2l,c
  2191   003B7C  6ADA               	clrf	fsr2h,c
  2192   003B7E  C01D  FFDF         	movff	dtoa@s,indf2
  2193   003B82                     l1690:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2196   003B82  C015  F00E         	movff	dtoa@fp,pad@fp
  2197   003B86  501E               	movf	dtoa@i^0,w,c
  2198   003B88  0F85               	addlw	low _dbuf
  2199   003B8A  6E0F               	movwf	pad@buf^0,c
  2200   003B8C  C01A  F010         	movff	dtoa@w,pad@p
  2201   003B90  C01B  F011         	movff	dtoa@w+1,pad@p+1
  2202   003B94  ECF2  F01A         	call	_pad	;wreg free
  2203   003B98  0012               	return		;funcret
  2204   003B9A                     __end_of_dtoa:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _pad *****************
  2208 ;; Defined at:
  2209 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2212 ;;		 -> sprintf@f(11), 
  2213 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2214 ;;		 -> dbuf(32), 
  2215 ;;  p               2   15[COMRAM] int 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  i               2   18[COMRAM] int 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2227 ;;      Params:         4       0       0       0       0       0       0       0       0
  2228 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2229 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2230 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2231 ;;Total ram usage:        7 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 3
  2234 ;; This function calls:
  2235 ;;		_fputc
  2236 ;;		_fputs
  2237 ;; This function is called by:
  2238 ;;		_dtoa
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text6
  2243   0035E4                     __ptext6:
  2244                           	callstack 0
  2245   0035E4                     _pad:
  2246                           	callstack 23
  2247   0035E4                     
  2248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2249   0035E4  A04B               	btfss	_flags^0,0,c
  2250   0035E6  EFF7  F01A         	goto	u841
  2251   0035EA  EFF9  F01A         	goto	u840
  2252   0035EE                     u841:
  2253   0035EE  EFFF  F01A         	goto	l1632
  2254   0035F2                     u840:
  2255   0035F2                     
  2256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2257   0035F2  C00F  F009         	movff	pad@buf,fputs@s
  2258   0035F6  C00E  F00A         	movff	pad@fp,fputs@fp
  2259   0035FA  ECF4  F019         	call	_fputs	;wreg free
  2260   0035FE                     l1632:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2263   0035FE  BE11               	btfsc	(pad@p+1)^0,7,c
  2264   003600  EF06  F01B         	goto	u850
  2265   003604  EF04  F01B         	goto	u851
  2266   003608                     u851:
  2267   003608  EF0A  F01B         	goto	l893
  2268   00360C                     u850:
  2269   00360C                     
  2270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2271   00360C  0E00               	movlw	0
  2272   00360E  6E11               	movwf	(pad@p+1)^0,c
  2273   003610  0E00               	movlw	0
  2274   003612  6E10               	movwf	pad@p^0,c
  2275   003614                     l893:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2278   003614  0E00               	movlw	0
  2279   003616  6E14               	movwf	(pad@i+1)^0,c
  2280   003618  0E00               	movlw	0
  2281   00361A  6E13               	movwf	pad@i^0,c
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2284   00361C  EF1A  F01B         	goto	l1640
  2285   003620                     l1636:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2288   003620  0E00               	movlw	0
  2289   003622  6E02               	movwf	(fputc@c+1)^0,c
  2290   003624  0E20               	movlw	32
  2291   003626  6E01               	movwf	fputc@c^0,c
  2292   003628  C00E  F003         	movff	pad@fp,fputc@fp
  2293   00362C  EC37  F01B         	call	_fputc	;wreg free
  2294   003630                     
  2295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2296   003630  4A13               	infsnz	pad@i^0,f,c
  2297   003632  2A14               	incf	(pad@i+1)^0,f,c
  2298   003634                     l1640:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2301   003634  5010               	movf	pad@p^0,w,c
  2302   003636  5C13               	subwf	pad@i^0,w,c
  2303   003638  5014               	movf	(pad@i+1)^0,w,c
  2304   00363A  0A80               	xorlw	128
  2305   00363C  6E12               	movwf	??_pad^0,c
  2306   00363E  5011               	movf	(pad@p+1)^0,w,c
  2307   003640  0A80               	xorlw	128
  2308   003642  5812               	subwfb	??_pad^0,w,c
  2309   003644  A0D8               	btfss	status,0,c
  2310   003646  EF27  F01B         	goto	u861
  2311   00364A  EF29  F01B         	goto	u860
  2312   00364E                     u861:
  2313   00364E  EF10  F01B         	goto	l1636
  2314   003652                     u860:
  2315   003652                     
  2316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2317   003652  B04B               	btfsc	_flags^0,0,c
  2318   003654  EF2E  F01B         	goto	u871
  2319   003658  EF30  F01B         	goto	u870
  2320   00365C                     u871:
  2321   00365C  EF36  F01B         	goto	l898
  2322   003660                     u870:
  2323   003660                     
  2324                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2325   003660  C00F  F009         	movff	pad@buf,fputs@s
  2326   003664  C00E  F00A         	movff	pad@fp,fputs@fp
  2327   003668  ECF4  F019         	call	_fputs	;wreg free
  2328   00366C                     l898:
  2329   00366C  0012               	return		;funcret
  2330   00366E                     __end_of_pad:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _fputs *****************
  2334 ;; Defined at:
  2335 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  s               1    8[COMRAM] PTR const unsigned char 
  2338 ;;		 -> dbuf(32), 
  2339 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  2340 ;;		 -> sprintf@f(11), 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  i               2   11[COMRAM] int 
  2343 ;;  c               1   10[COMRAM] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  2    8[COMRAM] int 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2353 ;;      Params:         2       0       0       0       0       0       0       0       0
  2354 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2356 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2357 ;;Total ram usage:        5 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 2
  2360 ;; This function calls:
  2361 ;;		_fputc
  2362 ;; This function is called by:
  2363 ;;		_pad
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text7
  2368   0033E8                     __ptext7:
  2369                           	callstack 0
  2370   0033E8                     _fputs:
  2371                           	callstack 23
  2372   0033E8  0E00               	movlw	0
  2373   0033EA  6E0D               	movwf	(fputs@i+1)^0,c
  2374   0033EC  0E00               	movlw	0
  2375   0033EE  6E0C               	movwf	fputs@i^0,c
  2376   0033F0  EF03  F01A         	goto	l1546
  2377   0033F4                     l1542:
  2378   0033F4  C00B  F001         	movff	fputs@c,fputc@c
  2379   0033F8  6A02               	clrf	(fputc@c+1)^0,c
  2380   0033FA  C00A  F003         	movff	fputs@fp,fputc@fp
  2381   0033FE  EC37  F01B         	call	_fputc	;wreg free
  2382   003402  4A0C               	infsnz	fputs@i^0,f,c
  2383   003404  2A0D               	incf	(fputs@i+1)^0,f,c
  2384   003406                     l1546:
  2385   003406  5009               	movf	fputs@s^0,w,c
  2386   003408  240C               	addwf	fputs@i^0,w,c
  2387   00340A  6ED9               	movwf	fsr2l,c
  2388   00340C  6ADA               	clrf	fsr2h,c
  2389   00340E  50DF               	movf	indf2,w,c
  2390   003410  6E0B               	movwf	fputs@c^0,c
  2391   003412  500B               	movf	fputs@c^0,w,c
  2392   003414  A4D8               	btfss	status,2,c
  2393   003416  EF0F  F01A         	goto	u711
  2394   00341A  EF11  F01A         	goto	u710
  2395   00341E                     u711:
  2396   00341E  EFFA  F019         	goto	l1542
  2397   003422                     u710:
  2398   003422  0012               	return		;funcret
  2399   003424                     __end_of_fputs:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _fputc *****************
  2403 ;; Defined at:
  2404 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  c               2    0[COMRAM] int 
  2407 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2408 ;;		 -> sprintf@f(11), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  2    0[COMRAM] int 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2420 ;;      Params:         3       0       0       0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2422 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2423 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2424 ;;Total ram usage:        8 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 1
  2427 ;; This function calls:
  2428 ;;		_putch
  2429 ;; This function is called by:
  2430 ;;		_pad
  2431 ;;		_vfpfcnvrt
  2432 ;;		_fputs
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text8
  2437   00366E                     __ptext8:
  2438                           	callstack 0
  2439   00366E                     _fputc:
  2440                           	callstack 26
  2441   00366E  5003               	movf	fputc@fp^0,w,c
  2442   003670  B4D8               	btfsc	status,2,c
  2443   003672  EF3D  F01B         	goto	u671
  2444   003676  EF3F  F01B         	goto	u670
  2445   00367A                     u671:
  2446   00367A  EF47  F01B         	goto	l1530
  2447   00367E                     u670:
  2448   00367E  5003               	movf	fputc@fp^0,w,c
  2449   003680  A4D8               	btfss	status,2,c
  2450   003682  EF45  F01B         	goto	u681
  2451   003686  EF47  F01B         	goto	u680
  2452   00368A                     u681:
  2453   00368A  EF4C  F01B         	goto	l1532
  2454   00368E                     u680:
  2455   00368E                     l1530:
  2456   00368E  5001               	movf	fputc@c^0,w,c
  2457   003690  EC0C  F019         	call	_putch
  2458   003694  EF8B  F01B         	goto	l953
  2459   003698                     l1532:
  2460   003698  5003               	movf	fputc@fp^0,w,c
  2461   00369A  6ED9               	movwf	fsr2l,c
  2462   00369C  6ADA               	clrf	fsr2h,c
  2463   00369E  0E09               	movlw	9
  2464   0036A0  26D9               	addwf	fsr2l,f,c
  2465   0036A2  50DE               	movf	postinc2,w,c
  2466   0036A4  10DE               	iorwf	postinc2,w,c
  2467   0036A6  B4D8               	btfsc	status,2,c
  2468   0036A8  EF58  F01B         	goto	u691
  2469   0036AC  EF5A  F01B         	goto	u690
  2470   0036B0                     u691:
  2471   0036B0  EF73  F01B         	goto	l1536
  2472   0036B4                     u690:
  2473   0036B4  5003               	movf	fputc@fp^0,w,c
  2474   0036B6  6ED9               	movwf	fsr2l,c
  2475   0036B8  6ADA               	clrf	fsr2h,c
  2476   0036BA  0E09               	movlw	9
  2477   0036BC  26D9               	addwf	fsr2l,f,c
  2478   0036BE  5003               	movf	fputc@fp^0,w,c
  2479   0036C0  6EE1               	movwf	fsr1l,c
  2480   0036C2  6AE2               	clrf	fsr1h,c
  2481   0036C4  0E02               	movlw	2
  2482   0036C6  26E1               	addwf	fsr1l,f,c
  2483   0036C8  50DE               	movf	postinc2,w,c
  2484   0036CA  5CE6               	subwf	postinc1,w,c
  2485   0036CC  50E6               	movf	postinc1,w,c
  2486   0036CE  0A80               	xorlw	128
  2487   0036D0  6E08               	movwf	(??_fputc+4)^0,c
  2488   0036D2  50DE               	movf	postinc2,w,c
  2489   0036D4  0A80               	xorlw	128
  2490   0036D6  5808               	subwfb	(??_fputc+4)^0,w,c
  2491   0036D8  B0D8               	btfsc	status,0,c
  2492   0036DA  EF71  F01B         	goto	u701
  2493   0036DE  EF73  F01B         	goto	u700
  2494   0036E2                     u701:
  2495   0036E2  EF8B  F01B         	goto	l953
  2496   0036E6                     u700:
  2497   0036E6                     l1536:
  2498   0036E6  5003               	movf	fputc@fp^0,w,c
  2499   0036E8  6ED9               	movwf	fsr2l,c
  2500   0036EA  6ADA               	clrf	fsr2h,c
  2501   0036EC  0E02               	movlw	2
  2502   0036EE  26D9               	addwf	fsr2l,f,c
  2503   0036F0  50DF               	movf	indf2,w,c
  2504   0036F2  6E04               	movwf	??_fputc^0,c
  2505   0036F4  5003               	movf	fputc@fp^0,w,c
  2506   0036F6  6ED9               	movwf	fsr2l,c
  2507   0036F8  6ADA               	clrf	fsr2h,c
  2508   0036FA  50DF               	movf	indf2,w,c
  2509   0036FC  2404               	addwf	??_fputc^0,w,c
  2510   0036FE  6ED9               	movwf	fsr2l,c
  2511   003700  6ADA               	clrf	fsr2h,c
  2512   003702  C001  FFDF         	movff	fputc@c,indf2
  2513   003706  5003               	movf	fputc@fp^0,w,c
  2514   003708  6ED9               	movwf	fsr2l,c
  2515   00370A  6ADA               	clrf	fsr2h,c
  2516   00370C  0E02               	movlw	2
  2517   00370E  26D9               	addwf	fsr2l,f,c
  2518   003710  2ADE               	incf	postinc2,f,c
  2519   003712  0E00               	movlw	0
  2520   003714  22DD               	addwfc	postdec2,f,c
  2521   003716                     l953:
  2522   003716  0012               	return		;funcret
  2523   003718                     __end_of_fputc:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _putch *****************
  2527 ;; Defined at:
  2528 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  c               1    wreg     unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  c               1    0[COMRAM] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2546 ;;Total ram usage:        0 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_fputc
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text9
  2556   003218                     __ptext9:
  2557                           	callstack 0
  2558   003218                     _putch:
  2559                           	callstack 26
  2560   003218  0012               	return		;funcret
  2561   00321A                     __end_of_putch:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _abs *****************
  2565 ;; Defined at:
  2566 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  a               2    6[COMRAM] int 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  2    6[COMRAM] int 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2580 ;;      Params:         2       0       0       0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2582 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2583 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2584 ;;Total ram usage:        4 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_dtoa
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text10
  2594   003342                     __ptext10:
  2595                           	callstack 0
  2596   003342                     _abs:
  2597                           	callstack 26
  2598   003342  BE08               	btfsc	(abs@a+1)^0,7,c
  2599   003344  EFA6  F019         	goto	u881
  2600   003348  EFA8  F019         	goto	u880
  2601   00334C                     u881:
  2602   00334C  EFAE  F019         	goto	l938
  2603   003350                     u880:
  2604   003350  C007  F007         	movff	abs@a,?_abs
  2605   003354  C008  F008         	movff	abs@a+1,?_abs+1
  2606   003358  EFBA  F019         	goto	l941
  2607   00335C                     l938:
  2608   00335C  C007  F009         	movff	abs@a,??_abs
  2609   003360  C008  F00A         	movff	abs@a+1,??_abs+1
  2610   003364  1E09               	comf	??_abs^0,f,c
  2611   003366  1E0A               	comf	(??_abs+1)^0,f,c
  2612   003368  4A09               	infsnz	??_abs^0,f,c
  2613   00336A  2A0A               	incf	(??_abs+1)^0,f,c
  2614   00336C  C009  F007         	movff	??_abs,?_abs
  2615   003370  C00A  F008         	movff	??_abs+1,?_abs+1
  2616   003374                     l941:
  2617   003374  0012               	return		;funcret
  2618   003376                     __end_of_abs:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function ___awmod *****************
  2622 ;; Defined at:
  2623 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  dividend        2    0[COMRAM] int 
  2626 ;;  divisor         2    2[COMRAM] int 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  sign            1    5[COMRAM] unsigned char 
  2629 ;;  counter         1    4[COMRAM] unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  2    0[COMRAM] int 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2639 ;;      Params:         4       0       0       0       0       0       0       0       0
  2640 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2642 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2643 ;;Total ram usage:        6 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_dtoa
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text11
  2653   0037C4                     __ptext11:
  2654                           	callstack 0
  2655   0037C4                     ___awmod:
  2656                           	callstack 26
  2657   0037C4  6A06               	clrf	___awmod@sign^0,c
  2658   0037C6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2659   0037C8  EFEA  F01B         	goto	u780
  2660   0037CC  EFE8  F01B         	goto	u781
  2661   0037D0                     u781:
  2662   0037D0  EFF0  F01B         	goto	l1600
  2663   0037D4                     u780:
  2664   0037D4  6C01               	negf	___awmod@dividend^0,c
  2665   0037D6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2666   0037D8  B0D8               	btfsc	status,0,c
  2667   0037DA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2668   0037DC  0E01               	movlw	1
  2669   0037DE  6E06               	movwf	___awmod@sign^0,c
  2670   0037E0                     l1600:
  2671   0037E0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2672   0037E2  EFF7  F01B         	goto	u790
  2673   0037E6  EFF5  F01B         	goto	u791
  2674   0037EA                     u791:
  2675   0037EA  EFFB  F01B         	goto	l1604
  2676   0037EE                     u790:
  2677   0037EE  6C03               	negf	___awmod@divisor^0,c
  2678   0037F0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2679   0037F2  B0D8               	btfsc	status,0,c
  2680   0037F4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2681   0037F6                     l1604:
  2682   0037F6  5003               	movf	___awmod@divisor^0,w,c
  2683   0037F8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2684   0037FA  B4D8               	btfsc	status,2,c
  2685   0037FC  EF02  F01C         	goto	u801
  2686   003800  EF04  F01C         	goto	u800
  2687   003804                     u801:
  2688   003804  EF28  F01C         	goto	l1620
  2689   003808                     u800:
  2690   003808  0E01               	movlw	1
  2691   00380A  6E05               	movwf	___awmod@counter^0,c
  2692   00380C  EF0C  F01C         	goto	l1610
  2693   003810                     l1608:
  2694   003810  90D8               	bcf	status,0,c
  2695   003812  3603               	rlcf	___awmod@divisor^0,f,c
  2696   003814  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2697   003816  2A05               	incf	___awmod@counter^0,f,c
  2698   003818                     l1610:
  2699   003818  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2700   00381A  EF11  F01C         	goto	u811
  2701   00381E  EF13  F01C         	goto	u810
  2702   003822                     u811:
  2703   003822  EF08  F01C         	goto	l1608
  2704   003826                     u810:
  2705   003826                     l1612:
  2706   003826  5003               	movf	___awmod@divisor^0,w,c
  2707   003828  5C01               	subwf	___awmod@dividend^0,w,c
  2708   00382A  5004               	movf	(___awmod@divisor+1)^0,w,c
  2709   00382C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2710   00382E  A0D8               	btfss	status,0,c
  2711   003830  EF1C  F01C         	goto	u821
  2712   003834  EF1E  F01C         	goto	u820
  2713   003838                     u821:
  2714   003838  EF22  F01C         	goto	l1616
  2715   00383C                     u820:
  2716   00383C  5003               	movf	___awmod@divisor^0,w,c
  2717   00383E  5E01               	subwf	___awmod@dividend^0,f,c
  2718   003840  5004               	movf	(___awmod@divisor+1)^0,w,c
  2719   003842  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2720   003844                     l1616:
  2721   003844  90D8               	bcf	status,0,c
  2722   003846  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2723   003848  3203               	rrcf	___awmod@divisor^0,f,c
  2724   00384A  2E05               	decfsz	___awmod@counter^0,f,c
  2725   00384C  EF13  F01C         	goto	l1612
  2726   003850                     l1620:
  2727   003850  5006               	movf	___awmod@sign^0,w,c
  2728   003852  B4D8               	btfsc	status,2,c
  2729   003854  EF2E  F01C         	goto	u831
  2730   003858  EF30  F01C         	goto	u830
  2731   00385C                     u831:
  2732   00385C  EF34  F01C         	goto	l1624
  2733   003860                     u830:
  2734   003860  6C01               	negf	___awmod@dividend^0,c
  2735   003862  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2736   003864  B0D8               	btfsc	status,0,c
  2737   003866  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2738   003868                     l1624:
  2739   003868  C001  F001         	movff	___awmod@dividend,?___awmod
  2740   00386C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2741   003870  0012               	return		;funcret
  2742   003872                     __end_of___awmod:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function ___awdiv *****************
  2746 ;; Defined at:
  2747 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  dividend        2    0[COMRAM] int 
  2750 ;;  divisor         2    2[COMRAM] int 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  quotient        2    6[COMRAM] int 
  2753 ;;  sign            1    5[COMRAM] unsigned char 
  2754 ;;  counter         1    4[COMRAM] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2    0[COMRAM] int 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2764 ;;      Params:         4       0       0       0       0       0       0       0       0
  2765 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2767 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2768 ;;Total ram usage:        8 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;;		_dtoa
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text12
  2779   003872                     __ptext12:
  2780                           	callstack 0
  2781   003872                     ___awdiv:
  2782                           	callstack 26
  2783   003872  6A06               	clrf	___awdiv@sign^0,c
  2784   003874  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2785   003876  EF41  F01C         	goto	u720
  2786   00387A  EF3F  F01C         	goto	u721
  2787   00387E                     u721:
  2788   00387E  EF47  F01C         	goto	l1556
  2789   003882                     u720:
  2790   003882  6C03               	negf	___awdiv@divisor^0,c
  2791   003884  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2792   003886  B0D8               	btfsc	status,0,c
  2793   003888  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2794   00388A  0E01               	movlw	1
  2795   00388C  6E06               	movwf	___awdiv@sign^0,c
  2796   00388E                     l1556:
  2797   00388E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2798   003890  EF4E  F01C         	goto	u730
  2799   003894  EF4C  F01C         	goto	u731
  2800   003898                     u731:
  2801   003898  EF54  F01C         	goto	l1562
  2802   00389C                     u730:
  2803   00389C  6C01               	negf	___awdiv@dividend^0,c
  2804   00389E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2805   0038A0  B0D8               	btfsc	status,0,c
  2806   0038A2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2807   0038A4  0E01               	movlw	1
  2808   0038A6  1A06               	xorwf	___awdiv@sign^0,f,c
  2809   0038A8                     l1562:
  2810   0038A8  0E00               	movlw	0
  2811   0038AA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2812   0038AC  0E00               	movlw	0
  2813   0038AE  6E07               	movwf	___awdiv@quotient^0,c
  2814   0038B0  5003               	movf	___awdiv@divisor^0,w,c
  2815   0038B2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2816   0038B4  B4D8               	btfsc	status,2,c
  2817   0038B6  EF5F  F01C         	goto	u741
  2818   0038BA  EF61  F01C         	goto	u740
  2819   0038BE                     u741:
  2820   0038BE  EF89  F01C         	goto	l1584
  2821   0038C2                     u740:
  2822   0038C2  0E01               	movlw	1
  2823   0038C4  6E05               	movwf	___awdiv@counter^0,c
  2824   0038C6  EF69  F01C         	goto	l1570
  2825   0038CA                     l1568:
  2826   0038CA  90D8               	bcf	status,0,c
  2827   0038CC  3603               	rlcf	___awdiv@divisor^0,f,c
  2828   0038CE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2829   0038D0  2A05               	incf	___awdiv@counter^0,f,c
  2830   0038D2                     l1570:
  2831   0038D2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2832   0038D4  EF6E  F01C         	goto	u751
  2833   0038D8  EF70  F01C         	goto	u750
  2834   0038DC                     u751:
  2835   0038DC  EF65  F01C         	goto	l1568
  2836   0038E0                     u750:
  2837   0038E0                     l1572:
  2838   0038E0  90D8               	bcf	status,0,c
  2839   0038E2  3607               	rlcf	___awdiv@quotient^0,f,c
  2840   0038E4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2841   0038E6  5003               	movf	___awdiv@divisor^0,w,c
  2842   0038E8  5C01               	subwf	___awdiv@dividend^0,w,c
  2843   0038EA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2844   0038EC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2845   0038EE  A0D8               	btfss	status,0,c
  2846   0038F0  EF7C  F01C         	goto	u761
  2847   0038F4  EF7E  F01C         	goto	u760
  2848   0038F8                     u761:
  2849   0038F8  EF83  F01C         	goto	l1580
  2850   0038FC                     u760:
  2851   0038FC  5003               	movf	___awdiv@divisor^0,w,c
  2852   0038FE  5E01               	subwf	___awdiv@dividend^0,f,c
  2853   003900  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2854   003902  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2855   003904  8007               	bsf	___awdiv@quotient^0,0,c
  2856   003906                     l1580:
  2857   003906  90D8               	bcf	status,0,c
  2858   003908  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2859   00390A  3203               	rrcf	___awdiv@divisor^0,f,c
  2860   00390C  2E05               	decfsz	___awdiv@counter^0,f,c
  2861   00390E  EF70  F01C         	goto	l1572
  2862   003912                     l1584:
  2863   003912  5006               	movf	___awdiv@sign^0,w,c
  2864   003914  B4D8               	btfsc	status,2,c
  2865   003916  EF8F  F01C         	goto	u771
  2866   00391A  EF91  F01C         	goto	u770
  2867   00391E                     u771:
  2868   00391E  EF95  F01C         	goto	l1588
  2869   003922                     u770:
  2870   003922  6C07               	negf	___awdiv@quotient^0,c
  2871   003924  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2872   003926  B0D8               	btfsc	status,0,c
  2873   003928  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2874   00392A                     l1588:
  2875   00392A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2876   00392E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2877   003932  0012               	return		;funcret
  2878   003934                     __end_of___awdiv:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _UART_Write_Text *****************
  2882 ;; Defined at:
  2883 ;;		line 73 in file "main.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  text            2    1[COMRAM] PTR const unsigned char 
  2886 ;;		 -> main@uart_buf(20), STR_5(13), STR_4(15), STR_3(14), 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2898 ;;      Params:         2       0       0       0       0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2901 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2902 ;;Total ram usage:        2 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 1
  2905 ;; This function calls:
  2906 ;;		_UART_Write
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text13
  2913   0034B4                     __ptext13:
  2914                           	callstack 0
  2915   0034B4                     _UART_Write_Text:
  2916                           	callstack 29
  2917   0034B4                     
  2918                           ;main.c: 74:     while (*text) UART_Write(*text++);
  2919   0034B4  EF70  F01A         	goto	l1890
  2920   0034B8                     l1886:
  2921   0034B8  C002  FFF6         	movff	UART_Write_Text@text,tblptrl
  2922   0034BC  C003  FFF7         	movff	UART_Write_Text@text+1,tblptrh
  2923   0034C0  6AF8               	clrf	tblptru,c
  2924   0034C2  0E07               	movlw	(high __ramtop+-1)
  2925   0034C4  64F7               	cpfsgt	tblptrh,c
  2926   0034C6  D003               	bra	u1077
  2927   0034C8  0008               	tblrd		*
  2928   0034CA  50F5               	movf	tablat,w,c
  2929   0034CC  D005               	bra	u1070
  2930   0034CE                     u1077:
  2931   0034CE  CFF6 FFE1          	movff	tblptrl,fsr1l
  2932   0034D2  CFF7 FFE2          	movff	tblptrh,fsr1h
  2933   0034D6  50E7               	movf	indf1,w,c
  2934   0034D8                     u1070:
  2935   0034D8  EC2F  F019         	call	_UART_Write
  2936   0034DC  4A02               	infsnz	UART_Write_Text@text^0,f,c
  2937   0034DE  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
  2938   0034E0                     l1890:
  2939   0034E0  C002  FFF6         	movff	UART_Write_Text@text,tblptrl
  2940   0034E4  C003  FFF7         	movff	UART_Write_Text@text+1,tblptrh
  2941   0034E8  6AF8               	clrf	tblptru,c
  2942   0034EA  0E07               	movlw	(high __ramtop+-1)
  2943   0034EC  64F7               	cpfsgt	tblptrh,c
  2944   0034EE  D003               	bra	u1087
  2945   0034F0  0008               	tblrd		*
  2946   0034F2  50F5               	movf	tablat,w,c
  2947   0034F4  D005               	bra	u1080
  2948   0034F6                     u1087:
  2949   0034F6  CFF6 FFE1          	movff	tblptrl,fsr1l
  2950   0034FA  CFF7 FFE2          	movff	tblptrh,fsr1h
  2951   0034FE  50E7               	movf	indf1,w,c
  2952   003500                     u1080:
  2953   003500  0900               	iorlw	0
  2954   003502  A4D8               	btfss	status,2,c
  2955   003504  EF86  F01A         	goto	u1091
  2956   003508  EF88  F01A         	goto	u1090
  2957   00350C                     u1091:
  2958   00350C  EF5C  F01A         	goto	l1886
  2959   003510                     u1090:
  2960   003510  0012               	return		;funcret
  2961   003512                     __end_of_UART_Write_Text:
  2962                           	callstack 0
  2963                           
  2964 ;; *************** function _UART_Write *****************
  2965 ;; Defined at:
  2966 ;;		line 68 in file "main.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  data            1    wreg     unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  data            1    0[COMRAM] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0
  2981 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2983 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2984 ;;Total ram usage:        1 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_UART_Write_Text
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text14
  2994   00325E                     __ptext14:
  2995                           	callstack 0
  2996   00325E                     _UART_Write:
  2997                           	callstack 29
  2998                           
  2999                           ;incstack = 0
  3000                           ;UART_Write@data stored from wreg
  3001   00325E  6E01               	movwf	UART_Write@data^0,c
  3002   003260                     l84:
  3003   003260  A2AC               	btfss	172,1,c	;volatile
  3004   003262  EF35  F019         	goto	u1041
  3005   003266  EF37  F019         	goto	u1040
  3006   00326A                     u1041:
  3007   00326A  EF30  F019         	goto	l84
  3008   00326E                     u1040:
  3009   00326E                     
  3010                           ;main.c: 70:     TXREG = data;
  3011   00326E  C001  FFAD         	movff	UART_Write@data,4013	;volatile
  3012   003272  0012               	return		;funcret
  3013   003274                     __end_of_UART_Write:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _UART_Init *****************
  3017 ;; Defined at:
  3018 ;;		line 52 in file "main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3032 ;;      Params:         0       0       0       0       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text15
  3046   003248                     __ptext15:
  3047                           	callstack 0
  3048   003248                     _UART_Init:
  3049                           	callstack 30
  3050   003248                     
  3051                           ;main.c: 53:     TRISCbits.RC6 = 0;
  3052   003248  9C94               	bcf	148,6,c	;volatile
  3053                           
  3054                           ;main.c: 54:     TRISCbits.RC7 = 1;
  3055   00324A  8E94               	bsf	148,7,c	;volatile
  3056   00324C                     
  3057                           ;main.c: 56:     SPBRG = 77;
  3058   00324C  0E4D               	movlw	77
  3059   00324E  6EAF               	movwf	175,c	;volatile
  3060   003250                     
  3061                           ;main.c: 57:     TXSTAbits.BRGH = 0;
  3062   003250  94AC               	bcf	172,2,c	;volatile
  3063   003252                     
  3064                           ;main.c: 58:     BAUDCONbits.BRG16 = 0;
  3065   003252  96B8               	bcf	184,3,c	;volatile
  3066   003254                     
  3067                           ;main.c: 60:     TXSTAbits.SYNC = 0;
  3068   003254  98AC               	bcf	172,4,c	;volatile
  3069   003256                     
  3070                           ;main.c: 61:     RCSTAbits.SPEN = 1;
  3071   003256  8EAB               	bsf	171,7,c	;volatile
  3072   003258                     
  3073                           ;main.c: 63:     TXSTAbits.TXEN = 1;
  3074   003258  8AAC               	bsf	172,5,c	;volatile
  3075   00325A                     
  3076                           ;main.c: 64:     RCSTAbits.CREN = 1;
  3077   00325A  88AB               	bsf	171,4,c	;volatile
  3078   00325C  0012               	return		;funcret
  3079   00325E                     __end_of_UART_Init:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function _Read_Temperature *****************
  3083 ;; Defined at:
  3084 ;;		line 34 in file "main.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2    0[COMRAM] unsigned int 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3098 ;;      Params:         2       0       0       0       0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3101 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3102 ;;Total ram usage:        4 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text16
  3112   0032B0                     __ptext16:
  3113                           	callstack 0
  3114   0032B0                     _Read_Temperature:
  3115                           	callstack 30
  3116   0032B0                     
  3117                           ;main.c: 35:     _delay((unsigned long)((20)*(48000000UL/4000000.0)));
  3118   0032B0  0E50               	movlw	80
  3119   0032B2                     u1377:
  3120   0032B2  2EE8               	decfsz	wreg,f,c
  3121   0032B4  D7FE               	bra	u1377
  3122   0032B6                     
  3123                           ;main.c: 36:     ADCON0bits.GO = 1;
  3124   0032B6  82C2               	bsf	194,1,c	;volatile
  3125   0032B8                     l72:
  3126   0032B8  B2C2               	btfsc	194,1,c	;volatile
  3127   0032BA  EF61  F019         	goto	u1061
  3128   0032BE  EF63  F019         	goto	u1060
  3129   0032C2                     u1061:
  3130   0032C2  EF5C  F019         	goto	l72
  3131   0032C6                     u1060:
  3132   0032C6                     
  3133                           ;main.c: 38:     return (ADRESH << 8) | ADRESL;
  3134   0032C6  50C3               	movf	195,w,c	;volatile
  3135   0032C8  CFC4 F003          	movff	4036,??_Read_Temperature	;volatile
  3136   0032CC  6A04               	clrf	(??_Read_Temperature+1)^0,c
  3137   0032CE  C003  F004         	movff	??_Read_Temperature,??_Read_Temperature+1
  3138   0032D2  6A03               	clrf	??_Read_Temperature^0,c
  3139   0032D4  1003               	iorwf	??_Read_Temperature^0,w,c
  3140   0032D6  6E01               	movwf	?_Read_Temperature^0,c
  3141   0032D8  5004               	movf	(??_Read_Temperature+1)^0,w,c
  3142   0032DA  6E02               	movwf	(?_Read_Temperature+1)^0,c
  3143   0032DC  0012               	return		;funcret
  3144   0032DE                     __end_of_Read_Temperature:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function _PWM_Init *****************
  3148 ;; Defined at:
  3149 ;;		line 41 in file "main.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3166 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text17
  3177   003232                     __ptext17:
  3178                           	callstack 0
  3179   003232                     _PWM_Init:
  3180                           	callstack 30
  3181   003232                     
  3182                           ;main.c: 42:     TRISCbits.TRISC1 = 0;
  3183   003232  9294               	bcf	148,1,c	;volatile
  3184                           
  3185                           ;main.c: 43:     TRISCbits.TRISC2 = 0;
  3186   003234  9494               	bcf	148,2,c	;volatile
  3187                           
  3188                           ;main.c: 44:     T2CONbits.TMR2ON = 1;
  3189   003236  84CA               	bsf	202,2,c	;volatile
  3190   003238                     
  3191                           ;main.c: 45:     PR2 = 124;
  3192   003238  0E7C               	movlw	124
  3193   00323A  6ECB               	movwf	203,c	;volatile
  3194                           
  3195                           ;main.c: 46:     CCP1CON = 0x0C;
  3196   00323C  0E0C               	movlw	12
  3197   00323E  6EBD               	movwf	189,c	;volatile
  3198                           
  3199                           ;main.c: 47:     T2CON = 0b00000110;
  3200   003240  0E06               	movlw	6
  3201   003242  6ECA               	movwf	202,c	;volatile
  3202   003244                     
  3203                           ;main.c: 48:     CCPR1L = 0;
  3204   003244  6ABE               	clrf	190,c	;volatile
  3205   003246  0012               	return		;funcret
  3206   003248                     __end_of_PWM_Init:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _POS_CURSOR *****************
  3210 ;; Defined at:
  3211 ;;		line 6 in file "LCD.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  fila            1    wreg     unsigned char 
  3214 ;;  columna         1    3[COMRAM] unsigned char 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  fila            1    4[COMRAM] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3226 ;;      Params:         1       0       0       0       0       0       0       0       0
  3227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3229 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3230 ;;Total ram usage:        2 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 2
  3233 ;; This function calls:
  3234 ;;		_ENVIA_LCD_CMD
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text18
  3241   0033AE                     __ptext18:
  3242                           	callstack 0
  3243   0033AE                     _POS_CURSOR:
  3244                           	callstack 28
  3245                           
  3246                           ;incstack = 0
  3247                           ;POS_CURSOR@fila stored from wreg
  3248   0033AE  6E05               	movwf	POS_CURSOR@fila^0,c
  3249   0033B0                     
  3250                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  3251   0033B0  0405               	decf	POS_CURSOR@fila^0,w,c
  3252   0033B2  A4D8               	btfss	status,2,c
  3253   0033B4  EFDE  F019         	goto	u1101
  3254   0033B8  EFE0  F019         	goto	u1100
  3255   0033BC                     u1101:
  3256   0033BC  EFE6  F019         	goto	l1922
  3257   0033C0                     u1100:
  3258   0033C0                     
  3259                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  3260   0033C0  5004               	movf	POS_CURSOR@columna^0,w,c
  3261   0033C2  0F80               	addlw	128
  3262   0033C4  EC6F  F019         	call	_ENVIA_LCD_CMD
  3263                           
  3264                           ;LCD.c: 11:  }
  3265   0033C8  EFF3  F019         	goto	l142
  3266   0033CC                     l1922:
  3267   0033CC  0E02               	movlw	2
  3268   0033CE  1805               	xorwf	POS_CURSOR@fila^0,w,c
  3269   0033D0  A4D8               	btfss	status,2,c
  3270   0033D2  EFED  F019         	goto	u1111
  3271   0033D6  EFEF  F019         	goto	u1110
  3272   0033DA                     u1111:
  3273   0033DA  EFF3  F019         	goto	l142
  3274   0033DE                     u1110:
  3275   0033DE                     
  3276                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  3277   0033DE  5004               	movf	POS_CURSOR@columna^0,w,c
  3278   0033E0  0FC0               	addlw	192
  3279   0033E2  EC6F  F019         	call	_ENVIA_LCD_CMD
  3280   0033E6                     l142:
  3281   0033E6  0012               	return		;funcret
  3282   0033E8                     __end_of_POS_CURSOR:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _LCD_CONFIG *****************
  3286 ;; Defined at:
  3287 ;;		line 72 in file "LCD.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3303 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3304 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3305 ;;Total ram usage:        1 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 2
  3308 ;; This function calls:
  3309 ;;		_ENVIA_LCD_CMD
  3310 ;;		_ENVIA_NIBBLE
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text19
  3317   003512                     __ptext19:
  3318                           	callstack 0
  3319   003512                     _LCD_CONFIG:
  3320                           	callstack 28
  3321   003512                     
  3322                           ;LCD.c: 74:  LATEbits.LATE0 = 0;
  3323   003512  908D               	bcf	141,0,c	;volatile
  3324                           
  3325                           ;LCD.c: 75:  LATEbits.LATE1 = 0;
  3326   003514  928D               	bcf	141,1,c	;volatile
  3327   003516                     
  3328                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  3329   003516  0E30               	movlw	48
  3330   003518  EC3A  F019         	call	_ENVIA_NIBBLE
  3331   00351C                     
  3332                           ;LCD.c: 77:         _delay(24000);
  3333   00351C  0E20               	movlw	32
  3334   00351E  6E04               	movwf	??_LCD_CONFIG^0,c
  3335   003520  0E2A               	movlw	42
  3336   003522                     u1387:
  3337   003522  2EE8               	decfsz	wreg,f,c
  3338   003524  D7FE               	bra	u1387
  3339   003526  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  3340   003528  D7FC               	bra	u1387
  3341   00352A                     
  3342                           ;LCD.c: 78:         _delay(24000);
  3343   00352A  0E20               	movlw	32
  3344   00352C  6E04               	movwf	??_LCD_CONFIG^0,c
  3345   00352E  0E2A               	movlw	42
  3346   003530                     u1397:
  3347   003530  2EE8               	decfsz	wreg,f,c
  3348   003532  D7FE               	bra	u1397
  3349   003534  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  3350   003536  D7FC               	bra	u1397
  3351                           
  3352                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  3353   003538  0E30               	movlw	48
  3354   00353A  EC3A  F019         	call	_ENVIA_NIBBLE
  3355   00353E                     
  3356                           ;LCD.c: 83:  _delay(1200);
  3357   00353E  0EF0               	movlw	240
  3358   003540                     u1407:
  3359   003540  D000               	nop2	
  3360   003542  2EE8               	decfsz	wreg,f,c
  3361   003544  D7FD               	bra	u1407
  3362   003546                     
  3363                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  3364   003546  0E30               	movlw	48
  3365   003548  EC3A  F019         	call	_ENVIA_NIBBLE
  3366   00354C                     
  3367                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  3368   00354C  0E20               	movlw	32
  3369   00354E  EC3A  F019         	call	_ENVIA_NIBBLE
  3370   003552                     
  3371                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  3372   003552  0E01               	movlw	1
  3373   003554  EC6F  F019         	call	_ENVIA_LCD_CMD
  3374   003558                     
  3375                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  3376   003558  0E28               	movlw	40
  3377   00355A  EC6F  F019         	call	_ENVIA_LCD_CMD
  3378   00355E                     
  3379                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  3380   00355E  0E0F               	movlw	15
  3381   003560  EC6F  F019         	call	_ENVIA_LCD_CMD
  3382   003564                     
  3383                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  3384   003564  0E06               	movlw	6
  3385   003566  EC6F  F019         	call	_ENVIA_LCD_CMD
  3386   00356A                     
  3387                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  3388   00356A  0E01               	movlw	1
  3389   00356C  EC6F  F019         	call	_ENVIA_LCD_CMD
  3390   003570  0012               	return		;funcret
  3391   003572                     __end_of_LCD_CONFIG:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function _ESCRIBE_MENSAJE *****************
  3395 ;; Defined at:
  3396 ;;		line 41 in file "LCD.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  3399 ;;		 -> STR_8(4), STR_7(4), main@temp_str(5), STR_2(9), 
  3400 ;;		 -> STR_1(13), 
  3401 ;;  tam             1    5[COMRAM] unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  i               1    8[COMRAM] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3413 ;;      Params:         3       0       0       0       0       0       0       0       0
  3414 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3415 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3416 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3417 ;;Total ram usage:        6 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 2
  3420 ;; This function calls:
  3421 ;;		_ENVIA_CHAR
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text20
  3428   003466                     __ptext20:
  3429                           	callstack 0
  3430   003466                     _ESCRIBE_MENSAJE:
  3431                           	callstack 28
  3432   003466                     
  3433                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  3434   003466  6A09               	clrf	ESCRIBE_MENSAJE@i^0,c
  3435                           
  3436                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  3437   003468  6A09               	clrf	ESCRIBE_MENSAJE@i^0,c
  3438   00346A  EF50  F01A         	goto	l1932
  3439   00346E                     l1928:
  3440                           
  3441                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  3442   00346E  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  3443   003470  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  3444   003472  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  3445   003474  0E00               	movlw	0
  3446   003476  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  3447   003478  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  3448   00347A  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  3449   00347E  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  3450   003482  6AF8               	clrf	tblptru,c
  3451   003484  0E07               	movlw	(high __ramtop+-1)
  3452   003486  64F7               	cpfsgt	tblptrh,c
  3453   003488  D003               	bra	u1127
  3454   00348A  0008               	tblrd		*
  3455   00348C  50F5               	movf	tablat,w,c
  3456   00348E  D005               	bra	u1120
  3457   003490                     u1127:
  3458   003490  CFF6 FFE1          	movff	tblptrl,fsr1l
  3459   003494  CFF7 FFE2          	movff	tblptrh,fsr1h
  3460   003498  50E7               	movf	indf1,w,c
  3461   00349A                     u1120:
  3462   00349A  EC88  F019         	call	_ENVIA_CHAR
  3463   00349E                     
  3464                           ;LCD.c: 47:  }
  3465   00349E  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  3466   0034A0                     l1932:
  3467   0034A0  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  3468   0034A2  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  3469   0034A4  A0D8               	btfss	status,0,c
  3470   0034A6  EF57  F01A         	goto	u1131
  3471   0034AA  EF59  F01A         	goto	u1130
  3472   0034AE                     u1131:
  3473   0034AE  EF37  F01A         	goto	l1928
  3474   0034B2                     u1130:
  3475   0034B2  0012               	return		;funcret
  3476   0034B4                     __end_of_ESCRIBE_MENSAJE:
  3477                           	callstack 0
  3478                           
  3479 ;; *************** function _ENVIA_CHAR *****************
  3480 ;; Defined at:
  3481 ;;		line 50 in file "LCD.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  dato            1    wreg     unsigned char 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  dato            1    1[COMRAM] unsigned char 
  3486 ;;  aux             1    2[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0
  3497 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3499 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        2 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 1
  3503 ;; This function calls:
  3504 ;;		_ENVIA_NIBBLE
  3505 ;;		_LEER_LCD
  3506 ;; This function is called by:
  3507 ;;		_ESCRIBE_MENSAJE
  3508 ;;		_GENERACARACTER
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text21
  3513   003310                     __ptext21:
  3514                           	callstack 0
  3515   003310                     _ENVIA_CHAR:
  3516                           	callstack 28
  3517                           
  3518                           ;incstack = 0
  3519                           ;ENVIA_CHAR@dato stored from wreg
  3520   003310  6E02               	movwf	ENVIA_CHAR@dato^0,c
  3521   003312                     
  3522                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATEbits.LATE0 = 1;
  3523   003312  808D               	bsf	141,0,c	;volatile
  3524   003314                     
  3525                           ;LCD.c: 54:  LEER_LCD();
  3526   003314  ECB9  F01A         	call	_LEER_LCD	;wreg free
  3527   003318                     
  3528                           ;LCD.c: 55:  TRISD = 0x00;
  3529   003318  6A95               	clrf	149,c	;volatile
  3530   00331A                     
  3531                           ;LCD.c: 56:         _delay(1200);
  3532   00331A  0EF0               	movlw	240
  3533   00331C                     u1417:
  3534   00331C  D000               	nop2	
  3535   00331E  2EE8               	decfsz	wreg,f,c
  3536   003320  D7FD               	bra	u1417
  3537   003322                     
  3538                           ;LCD.c: 58:  LATEbits.LATE1 = 0;
  3539   003322  928D               	bcf	141,1,c	;volatile
  3540   003324                     
  3541                           ;LCD.c: 59:  LATEbits.LATE2 = 0;
  3542   003324  948D               	bcf	141,2,c	;volatile
  3543   003326                     
  3544                           ;LCD.c: 60:  LATEbits.LATE0 = 1;
  3545   003326  808D               	bsf	141,0,c	;volatile
  3546   003328                     
  3547                           ;LCD.c: 61:  aux = dato & 0xF0;
  3548   003328  5002               	movf	ENVIA_CHAR@dato^0,w,c
  3549   00332A  0BF0               	andlw	240
  3550   00332C  6E03               	movwf	ENVIA_CHAR@aux^0,c
  3551   00332E                     
  3552                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3553   00332E  5003               	movf	ENVIA_CHAR@aux^0,w,c
  3554   003330  EC3A  F019         	call	_ENVIA_NIBBLE
  3555   003334                     
  3556                           ;LCD.c: 63:  aux = dato << 4;
  3557   003334  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  3558   003336  0BF0               	andlw	240
  3559   003338  6E03               	movwf	ENVIA_CHAR@aux^0,c
  3560   00333A                     
  3561                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3562   00333A  5003               	movf	ENVIA_CHAR@aux^0,w,c
  3563   00333C  EC3A  F019         	call	_ENVIA_NIBBLE
  3564   003340  0012               	return		;funcret
  3565   003342                     __end_of_ENVIA_CHAR:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _BORRAR_LCD *****************
  3569 ;; Defined at:
  3570 ;;		line 67 in file "LCD.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 2
  3591 ;; This function calls:
  3592 ;;		_ENVIA_LCD_CMD
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text22
  3599   00321A                     __ptext22:
  3600                           	callstack 0
  3601   00321A                     _BORRAR_LCD:
  3602                           	callstack 28
  3603   00321A                     
  3604                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  3605   00321A  0E01               	movlw	1
  3606   00321C  EC6F  F019         	call	_ENVIA_LCD_CMD
  3607   003220  0012               	return		;funcret
  3608   003222                     __end_of_BORRAR_LCD:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function _ENVIA_LCD_CMD *****************
  3612 ;; Defined at:
  3613 ;;		line 104 in file "LCD.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  dato            1    wreg     unsigned char 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  dato            1    1[COMRAM] unsigned char 
  3618 ;;  aux             1    2[COMRAM] unsigned char 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0
  3629 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3631 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3632 ;;Total ram usage:        2 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 1
  3635 ;; This function calls:
  3636 ;;		_ENVIA_NIBBLE
  3637 ;;		_LEER_LCD
  3638 ;; This function is called by:
  3639 ;;		_POS_CURSOR
  3640 ;;		_BORRAR_LCD
  3641 ;;		_LCD_CONFIG
  3642 ;;		_BLINK_CURSOR
  3643 ;;		_DISPLAY_ONOFF
  3644 ;;		_CURSOR_HOME
  3645 ;;		_CURSOR_ONOFF
  3646 ;;		_GENERACARACTER
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text23
  3651   0032DE                     __ptext23:
  3652                           	callstack 0
  3653   0032DE                     _ENVIA_LCD_CMD:
  3654                           	callstack 28
  3655                           
  3656                           ;incstack = 0
  3657                           ;ENVIA_LCD_CMD@dato stored from wreg
  3658   0032DE  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  3659   0032E0                     
  3660                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATEbits.LATE0 = 0;
  3661   0032E0  908D               	bcf	141,0,c	;volatile
  3662   0032E2                     
  3663                           ;LCD.c: 108:  LEER_LCD();
  3664   0032E2  ECB9  F01A         	call	_LEER_LCD	;wreg free
  3665   0032E6                     
  3666                           ;LCD.c: 109:  TRISD = 0b00000000;
  3667   0032E6  6A95               	clrf	149,c	;volatile
  3668   0032E8                     
  3669                           ;LCD.c: 111:         _delay(1200);
  3670   0032E8  0EF0               	movlw	240
  3671   0032EA                     u1427:
  3672   0032EA  D000               	nop2	
  3673   0032EC  2EE8               	decfsz	wreg,f,c
  3674   0032EE  D7FD               	bra	u1427
  3675   0032F0                     
  3676                           ;LCD.c: 112:         LATEbits.LATE1 = 0;
  3677   0032F0  928D               	bcf	141,1,c	;volatile
  3678   0032F2                     
  3679                           ;LCD.c: 113:  LATEbits.LATE2 = 0;
  3680   0032F2  948D               	bcf	141,2,c	;volatile
  3681   0032F4                     
  3682                           ;LCD.c: 114:  LATEbits.LATE0 = 0;
  3683   0032F4  908D               	bcf	141,0,c	;volatile
  3684   0032F6                     
  3685                           ;LCD.c: 115:  aux = dato & 0xF0;
  3686   0032F6  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  3687   0032F8  0BF0               	andlw	240
  3688   0032FA  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  3689   0032FC                     
  3690                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3691   0032FC  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  3692   0032FE  EC3A  F019         	call	_ENVIA_NIBBLE
  3693   003302                     
  3694                           ;LCD.c: 117:  aux = dato<<4;
  3695   003302  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  3696   003304  0BF0               	andlw	240
  3697   003306  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  3698   003308                     
  3699                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3700   003308  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  3701   00330A  EC3A  F019         	call	_ENVIA_NIBBLE
  3702   00330E  0012               	return		;funcret
  3703   003310                     __end_of_ENVIA_LCD_CMD:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function _LEER_LCD *****************
  3707 ;; Defined at:
  3708 ;;		line 121 in file "LCD.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  aux             1    0[COMRAM] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3722 ;;      Params:         0       0       0       0       0       0       0       0       0
  3723 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3725 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_ENVIA_CHAR
  3732 ;;		_ENVIA_LCD_CMD
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text24
  3737   003572                     __ptext24:
  3738                           	callstack 0
  3739   003572                     _LEER_LCD:
  3740                           	callstack 28
  3741   003572                     
  3742                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3743   003572  0EF8               	movlw	248
  3744   003574  6E95               	movwf	149,c	;volatile
  3745   003576                     
  3746                           ;LCD.c: 125:  LATEbits.LATE0 = 0;
  3747   003576  908D               	bcf	141,0,c	;volatile
  3748   003578                     
  3749                           ;LCD.c: 126:  LATEbits.LATE1 = 1;
  3750   003578  828D               	bsf	141,1,c	;volatile
  3751   00357A                     
  3752                           ;LCD.c: 127:  LATEbits.LATE2 = 1;
  3753   00357A  848D               	bsf	141,2,c	;volatile
  3754   00357C                     
  3755                           ;LCD.c: 128:         _delay(1200);
  3756   00357C  0EF0               	movlw	240
  3757   00357E                     u1437:
  3758   00357E  D000               	nop2	
  3759   003580  2EE8               	decfsz	wreg,f,c
  3760   003582  D7FD               	bra	u1437
  3761   003584                     
  3762                           ;LCD.c: 130:  aux = PORTD;
  3763   003584  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  3764   003588                     
  3765                           ;LCD.c: 131:  LATEbits.LATE2 = 0;
  3766   003588  948D               	bcf	141,2,c	;volatile
  3767   00358A                     
  3768                           ;LCD.c: 132:         _delay(1200);
  3769   00358A  0EF0               	movlw	240
  3770   00358C                     u1447:
  3771   00358C  D000               	nop2	
  3772   00358E  2EE8               	decfsz	wreg,f,c
  3773   003590  D7FD               	bra	u1447
  3774   003592                     
  3775                           ;LCD.c: 134:  LATEbits.LATE2 = 1;
  3776   003592  848D               	bsf	141,2,c	;volatile
  3777   003594                     
  3778                           ;LCD.c: 135:         _delay(1200);
  3779   003594  0EF0               	movlw	240
  3780   003596                     u1457:
  3781   003596  D000               	nop2	
  3782   003598  2EE8               	decfsz	wreg,f,c
  3783   00359A  D7FD               	bra	u1457
  3784   00359C                     
  3785                           ;LCD.c: 137:  LATEbits.LATE2 = 0;
  3786   00359C  948D               	bcf	141,2,c	;volatile
  3787   00359E                     l1730:
  3788                           
  3789                           ;LCD.c: 138:  aux = aux & 0x80;
  3790   00359E  5001               	movf	LEER_LCD@aux^0,w,c
  3791   0035A0  0B80               	andlw	128
  3792   0035A2  6E01               	movwf	LEER_LCD@aux^0,c
  3793                           
  3794                           ;LCD.c: 139:  while(aux == 0x80)
  3795   0035A4  EFE8  F01A         	goto	l1744
  3796   0035A8                     l185:
  3797                           
  3798                           ;LCD.c: 140:         {;LCD.c: 141:             LATEbits.LATE2 = 1;
  3799   0035A8  848D               	bsf	141,2,c	;volatile
  3800   0035AA                     
  3801                           ;LCD.c: 142:             _delay(1200);
  3802   0035AA  0EF0               	movlw	240
  3803   0035AC                     u1467:
  3804   0035AC  D000               	nop2	
  3805   0035AE  2EE8               	decfsz	wreg,f,c
  3806   0035B0  D7FD               	bra	u1467
  3807   0035B2                     
  3808                           ;LCD.c: 143:             aux = PORTD;
  3809   0035B2  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  3810   0035B6                     
  3811                           ;LCD.c: 144:             LATEbits.LATE2 = 0;
  3812   0035B6  948D               	bcf	141,2,c	;volatile
  3813                           
  3814                           ;LCD.c: 145:             _delay(1200);
  3815   0035B8  0EF0               	movlw	240
  3816   0035BA                     u1477:
  3817   0035BA  D000               	nop2	
  3818   0035BC  2EE8               	decfsz	wreg,f,c
  3819   0035BE  D7FD               	bra	u1477
  3820   0035C0                     
  3821                           ;LCD.c: 146:             LATEbits.LATE2 = 1;
  3822   0035C0  848D               	bsf	141,2,c	;volatile
  3823                           
  3824                           ;LCD.c: 147:             _delay(1200);
  3825   0035C2  0EF0               	movlw	240
  3826   0035C4                     u1487:
  3827   0035C4  D000               	nop2	
  3828   0035C6  2EE8               	decfsz	wreg,f,c
  3829   0035C8  D7FD               	bra	u1487
  3830   0035CA                     
  3831                           ;LCD.c: 148:             LATEbits.LATE2 = 0;
  3832   0035CA  948D               	bcf	141,2,c	;volatile
  3833   0035CC  EFCF  F01A         	goto	l1730
  3834   0035D0                     l1744:
  3835                           
  3836                           ;LCD.c: 139:  while(aux == 0x80)
  3837   0035D0  0E80               	movlw	128
  3838   0035D2  1801               	xorwf	LEER_LCD@aux^0,w,c
  3839   0035D4  B4D8               	btfsc	status,2,c
  3840   0035D6  EFEF  F01A         	goto	u991
  3841   0035DA  EFF1  F01A         	goto	u990
  3842   0035DE                     u991:
  3843   0035DE  EFD4  F01A         	goto	l185
  3844   0035E2                     u990:
  3845   0035E2  0012               	return		;funcret
  3846   0035E4                     __end_of_LEER_LCD:
  3847                           	callstack 0
  3848                           
  3849 ;; *************** function _ENVIA_NIBBLE *****************
  3850 ;; Defined at:
  3851 ;;		line 93 in file "LCD.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  dato            1    wreg     unsigned char 
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  dato            1    0[COMRAM] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0
  3866 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3868 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3869 ;;Total ram usage:        1 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_ENVIA_CHAR
  3875 ;;		_LCD_CONFIG
  3876 ;;		_ENVIA_LCD_CMD
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text25
  3881   003274                     __ptext25:
  3882                           	callstack 0
  3883   003274                     _ENVIA_NIBBLE:
  3884                           	callstack 28
  3885                           
  3886                           ;incstack = 0
  3887                           ;ENVIA_NIBBLE@dato stored from wreg
  3888   003274  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  3889   003276                     
  3890                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3891   003276  0E0F               	movlw	15
  3892   003278  168C               	andwf	140,f,c	;volatile
  3893                           
  3894                           ;LCD.c: 96:  dato &= 0xF0;
  3895   00327A  0EF0               	movlw	240
  3896   00327C  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  3897                           
  3898                           ;LCD.c: 97:  LATD|= dato;
  3899   00327E  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  3900   003280  128C               	iorwf	140,f,c	;volatile
  3901   003282                     
  3902                           ;LCD.c: 98:  LATEbits.LATE2 = 1;
  3903   003282  848D               	bsf	141,2,c	;volatile
  3904   003284                     
  3905                           ;LCD.c: 100:         _delay(1200);
  3906   003284  0EF0               	movlw	240
  3907   003286                     u1497:
  3908   003286  D000               	nop2	
  3909   003288  2EE8               	decfsz	wreg,f,c
  3910   00328A  D7FD               	bra	u1497
  3911   00328C                     
  3912                           ;LCD.c: 101:  LATEbits.LATE2 = 0;
  3913   00328C  948D               	bcf	141,2,c	;volatile
  3914   00328E  0012               	return		;funcret
  3915   003290                     __end_of_ENVIA_NIBBLE:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _ADC_Init *****************
  3919 ;; Defined at:
  3920 ;;		line 27 in file "main.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3937 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:        0 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text26
  3948   003222                     __ptext26:
  3949                           	callstack 0
  3950   003222                     _ADC_Init:
  3951                           	callstack 30
  3952   003222                     
  3953                           ;main.c: 28:     TRISAbits.TRISA1 = 1;
  3954   003222  8292               	bsf	146,1,c	;volatile
  3955   003224                     
  3956                           ;main.c: 29:     ADCON1 = 0x0E;
  3957   003224  0E0E               	movlw	14
  3958   003226  6EC1               	movwf	193,c	;volatile
  3959                           
  3960                           ;main.c: 30:     ADCON2 = 0xBE;
  3961   003228  0EBE               	movlw	190
  3962   00322A  6EC0               	movwf	192,c	;volatile
  3963                           
  3964                           ;main.c: 31:     ADCON0 = 0b00000101;
  3965   00322C  0E05               	movlw	5
  3966   00322E  6EC2               	movwf	194,c	;volatile
  3967   003230  0012               	return		;funcret
  3968   003232                     __end_of_ADC_Init:
  3969                           	callstack 0
  3970                           
  3971                           	psect	rparam
  3972   000001                     ___rparam_used  equ	1
  3973   000000                     ___param_bank   equ	0
  3974   000000                     __Lparam        equ	__Lrparam
  3975   000000                     __Hparam        equ	__Hrparam
  3976                           
  3977                           	psect	idloc
  3978                           
  3979                           ;Config register IDLOC0 @ 0x200000
  3980                           ;	unspecified, using default values
  3981   200000                     	org	2097152
  3982   200000  FF                 	db	255
  3983                           
  3984                           ;Config register IDLOC1 @ 0x200001
  3985                           ;	unspecified, using default values
  3986   200001                     	org	2097153
  3987   200001  FF                 	db	255
  3988                           
  3989                           ;Config register IDLOC2 @ 0x200002
  3990                           ;	unspecified, using default values
  3991   200002                     	org	2097154
  3992   200002  FF                 	db	255
  3993                           
  3994                           ;Config register IDLOC3 @ 0x200003
  3995                           ;	unspecified, using default values
  3996   200003                     	org	2097155
  3997   200003  FF                 	db	255
  3998                           
  3999                           ;Config register IDLOC4 @ 0x200004
  4000                           ;	unspecified, using default values
  4001   200004                     	org	2097156
  4002   200004  FF                 	db	255
  4003                           
  4004                           ;Config register IDLOC5 @ 0x200005
  4005                           ;	unspecified, using default values
  4006   200005                     	org	2097157
  4007   200005  FF                 	db	255
  4008                           
  4009                           ;Config register IDLOC6 @ 0x200006
  4010                           ;	unspecified, using default values
  4011   200006                     	org	2097158
  4012   200006  FF                 	db	255
  4013                           
  4014                           ;Config register IDLOC7 @ 0x200007
  4015                           ;	unspecified, using default values
  4016   200007                     	org	2097159
  4017   200007  FF                 	db	255
  4018                           
  4019                           	psect	config
  4020                           
  4021                           ;Config register CONFIG1L @ 0x300000
  4022                           ;	PLL Prescaler Selection bits
  4023                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  4024                           ;	System Clock Postscaler Selection bits
  4025                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4026                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4027                           ;	USBDIV = 0x0, unprogrammed default
  4028   300000                     	org	3145728
  4029   300000  04                 	db	4
  4030                           
  4031                           ;Config register CONFIG1H @ 0x300001
  4032                           ;	Oscillator Selection bits
  4033                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  4034                           ;	Fail-Safe Clock Monitor Enable bit
  4035                           ;	FCMEN = 0x0, unprogrammed default
  4036                           ;	Internal/External Oscillator Switchover bit
  4037                           ;	IESO = 0x0, unprogrammed default
  4038   300001                     	org	3145729
  4039   300001  0E                 	db	14
  4040                           
  4041                           ;Config register CONFIG2L @ 0x300002
  4042                           ;	Power-up Timer Enable bit
  4043                           ;	PWRT = ON, PWRT enabled
  4044                           ;	Brown-out Reset Enable bits
  4045                           ;	BOR = 0x3, unprogrammed default
  4046                           ;	Brown-out Reset Voltage bits
  4047                           ;	BORV = 0x3, unprogrammed default
  4048                           ;	USB Voltage Regulator Enable bit
  4049                           ;	VREGEN = 0x0, unprogrammed default
  4050   300002                     	org	3145730
  4051   300002  1E                 	db	30
  4052                           
  4053                           ;Config register CONFIG2H @ 0x300003
  4054                           ;	Watchdog Timer Enable bit
  4055                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4056                           ;	Watchdog Timer Postscale Select bits
  4057                           ;	WDTPS = 0xF, unprogrammed default
  4058   300003                     	org	3145731
  4059   300003  1E                 	db	30
  4060                           
  4061                           ; Padding undefined space
  4062   300004                     	org	3145732
  4063   300004  FF                 	db	255
  4064                           
  4065                           ;Config register CONFIG3H @ 0x300005
  4066                           ;	CCP2 MUX bit
  4067                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4068                           ;	PORTB A/D Enable bit
  4069                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4070                           ;	Low-Power Timer 1 Oscillator Enable bit
  4071                           ;	LPT1OSC = 0x0, unprogrammed default
  4072                           ;	MCLR Pin Enable bit
  4073                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4074   300005                     	org	3145733
  4075   300005  81                 	db	129
  4076                           
  4077                           ;Config register CONFIG4L @ 0x300006
  4078                           ;	Stack Full/Underflow Reset Enable bit
  4079                           ;	STVREN = 0x1, unprogrammed default
  4080                           ;	Single-Supply ICSP Enable bit
  4081                           ;	LVP = OFF, Single-Supply ICSP disabled
  4082                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4083                           ;	ICPRT = 0x0, unprogrammed default
  4084                           ;	Extended Instruction Set Enable bit
  4085                           ;	XINST = 0x0, unprogrammed default
  4086                           ;	Background Debugger Enable bit
  4087                           ;	DEBUG = 0x1, unprogrammed default
  4088   300006                     	org	3145734
  4089   300006  81                 	db	129
  4090                           
  4091                           ; Padding undefined space
  4092   300007                     	org	3145735
  4093   300007  FF                 	db	255
  4094                           
  4095                           ;Config register CONFIG5L @ 0x300008
  4096                           ;	unspecified, using default values
  4097                           ;	Code Protection bit
  4098                           ;	CP0 = 0x1, unprogrammed default
  4099                           ;	Code Protection bit
  4100                           ;	CP1 = 0x1, unprogrammed default
  4101                           ;	Code Protection bit
  4102                           ;	CP2 = 0x1, unprogrammed default
  4103                           ;	Code Protection bit
  4104                           ;	CP3 = 0x1, unprogrammed default
  4105   300008                     	org	3145736
  4106   300008  0F                 	db	15
  4107                           
  4108                           ;Config register CONFIG5H @ 0x300009
  4109                           ;	unspecified, using default values
  4110                           ;	Boot Block Code Protection bit
  4111                           ;	CPB = 0x1, unprogrammed default
  4112                           ;	Data EEPROM Code Protection bit
  4113                           ;	CPD = 0x1, unprogrammed default
  4114   300009                     	org	3145737
  4115   300009  C0                 	db	192
  4116                           
  4117                           ;Config register CONFIG6L @ 0x30000A
  4118                           ;	unspecified, using default values
  4119                           ;	Write Protection bit
  4120                           ;	WRT0 = 0x1, unprogrammed default
  4121                           ;	Write Protection bit
  4122                           ;	WRT1 = 0x1, unprogrammed default
  4123                           ;	Write Protection bit
  4124                           ;	WRT2 = 0x1, unprogrammed default
  4125                           ;	Write Protection bit
  4126                           ;	WRT3 = 0x1, unprogrammed default
  4127   30000A                     	org	3145738
  4128   30000A  0F                 	db	15
  4129                           
  4130                           ;Config register CONFIG6H @ 0x30000B
  4131                           ;	unspecified, using default values
  4132                           ;	Configuration Register Write Protection bit
  4133                           ;	WRTC = 0x1, unprogrammed default
  4134                           ;	Boot Block Write Protection bit
  4135                           ;	WRTB = 0x1, unprogrammed default
  4136                           ;	Data EEPROM Write Protection bit
  4137                           ;	WRTD = 0x1, unprogrammed default
  4138   30000B                     	org	3145739
  4139   30000B  E0                 	db	224
  4140                           
  4141                           ;Config register CONFIG7L @ 0x30000C
  4142                           ;	unspecified, using default values
  4143                           ;	Table Read Protection bit
  4144                           ;	EBTR0 = 0x1, unprogrammed default
  4145                           ;	Table Read Protection bit
  4146                           ;	EBTR1 = 0x1, unprogrammed default
  4147                           ;	Table Read Protection bit
  4148                           ;	EBTR2 = 0x1, unprogrammed default
  4149                           ;	Table Read Protection bit
  4150                           ;	EBTR3 = 0x1, unprogrammed default
  4151   30000C                     	org	3145740
  4152   30000C  0F                 	db	15
  4153                           
  4154                           ;Config register CONFIG7H @ 0x30000D
  4155                           ;	unspecified, using default values
  4156                           ;	Boot Block Table Read Protection bit
  4157                           ;	EBTRB = 0x1, unprogrammed default
  4158   30000D                     	org	3145741
  4159   30000D  40                 	db	64
  4160                           tosu	equ	0xFFF
  4161                           tosh	equ	0xFFE
  4162                           tosl	equ	0xFFD
  4163                           stkptr	equ	0xFFC
  4164                           pclatu	equ	0xFFB
  4165                           pclath	equ	0xFFA
  4166                           pcl	equ	0xFF9
  4167                           tblptru	equ	0xFF8
  4168                           tblptrh	equ	0xFF7
  4169                           tblptrl	equ	0xFF6
  4170                           tablat	equ	0xFF5
  4171                           prodh	equ	0xFF4
  4172                           prodl	equ	0xFF3
  4173                           indf0	equ	0xFEF
  4174                           postinc0	equ	0xFEE
  4175                           postdec0	equ	0xFED
  4176                           preinc0	equ	0xFEC
  4177                           plusw0	equ	0xFEB
  4178                           fsr0h	equ	0xFEA
  4179                           fsr0l	equ	0xFE9
  4180                           wreg	equ	0xFE8
  4181                           indf1	equ	0xFE7
  4182                           postinc1	equ	0xFE6
  4183                           postdec1	equ	0xFE5
  4184                           preinc1	equ	0xFE4
  4185                           plusw1	equ	0xFE3
  4186                           fsr1h	equ	0xFE2
  4187                           fsr1l	equ	0xFE1
  4188                           bsr	equ	0xFE0
  4189                           indf2	equ	0xFDF
  4190                           postinc2	equ	0xFDE
  4191                           postdec2	equ	0xFDD
  4192                           preinc2	equ	0xFDC
  4193                           plusw2	equ	0xFDB
  4194                           fsr2h	equ	0xFDA
  4195                           fsr2l	equ	0xFD9
  4196                           status	equ	0xFD8

Data Sizes:
    Strings     84
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      75
    BANK0           160     35      69
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> main@temp_str(BANK0[5]), STR_1(CODE[13]), STR_2(CODE[9]), STR_7(CODE[4]), 
		 -> STR_8(CODE[4]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@temp_str(BANK0[5]), main@uart_buf(BANK0[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@temp_str(BANK0[5]), main@uart_buf(BANK0[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    main$655	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_8(CODE[4]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1172$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@temp_str(BANK0[5]), main@uart_buf(BANK0[20]), 

    S1172$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[5]), STR_9(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@temp_str(BANK0[5]), main@uart_buf(BANK0[20]), 

    UART_Write_Text@text	PTR const unsigned char  size(2) Largest target is 20
		 -> main@uart_buf(BANK0[20]), STR_3(CODE[14]), STR_4(CODE[15]), STR_5(CODE[13]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[5]), STR_9(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[5]), STR_9(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[5]), STR_9(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _UART_Write_Text->_UART_Write
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0    4789
                                             65 COMRAM     5     5      0
                                              0 BANK0     35    35      0
                           _ADC_Init
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                         _LCD_CONFIG
                         _POS_CURSOR
                           _PWM_Init
                   _Read_Temperature
                          _UART_Init
                    _UART_Write_Text
                            ___awdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    14      5    2912
                                             48 COMRAM    17    12      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4    2707
                                             42 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3    2576
                                             31 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    1805
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     747
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     333
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2      78
                                              1 COMRAM     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Temperature                                     4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     311
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     236
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     304
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     205
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     205
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     205
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
     _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _PWM_Init
   _Read_Temperature
   _UART_Init
   _UART_Write_Text
     _UART_Write
   ___awdiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     35      69     43.1%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     70      75     78.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRlh         32      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     144      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 12 15:50:32 2025

                        l72 32B8                          l81 325C                          l75 32DC  
                        l84 3260                          l69 3230                          l93 3510  
                        l78 3246                          l87 3272                ___awdiv@sign 0006  
          _Read_Temperature 32B0               ENVIA_CHAR@aux 0003                         l101 3CE0  
                       l106 3D26                         l142 33E6                         l172 3220  
                       l181 330E                         l166 34B2                         l175 3570  
                       l185 35A8                         l169 3340                         l178 328E  
                       l426 3932                         l187 35E2                         l439 3870  
                       l901 3ABC                         l912 3B98                         l920 37C2  
                       l916 37BA                         l941 3374                         l934 3464  
                       l928 3A5C                         l953 3716                         l961 3422  
                       l873 33AC                         l938 335C                         l964 3218  
                       l893 3614                         l896 3652                         l898 366C  
                       _PR2 0FCB                         u700 36E6                         u701 36E2  
                       u710 3422                         u711 341E                         u720 3882  
                       u800 3808                         u721 387E                         u801 3804  
                       u730 389C                         u810 3826                         u731 3898  
                       u811 3822                         u740 38C2                         u820 383C  
                       u900 3A74                         u741 38BE                         u821 3838  
                       u750 38E0                         u830 3860                         u670 367E  
                       u910 3A8E                         u751 38DC                         u831 385C  
                       u671 367A                         u911 3A8A                         u760 38FC  
                       u680 368E                         u840 35F2                         u920 3AA4  
                       u761 38F8                         u681 368A                         u841 35EE  
                       u921 3AA0                         u770 3922                         u690 36B4  
                       u850 360C                         u930 3B3E                         u771 391E  
                       u691 36B0                         u851 3608                         u931 3B3A  
                       u780 37D4                         u860 3652                         u940 3B50  
                       u781 37D0                         u861 364E                         u941 3B4C  
                       u790 37EE                         u870 3660                         u950 3B60  
                       u791 37EA                         u871 365C                         u951 3B5C  
                       u880 3350                         u960 3B70                         u881 334C  
                       u961 3B6C                         u890 3A72                         u970 3742  
                       u891 3A6C                         u971 373E                         u980 37BA  
                       u981 37B6                         u990 35E2                         u991 35DE  
                       _abs 3342                         _pad 35E4                ___awmod@sign 0006  
               LEER_LCD@aux 0001                         wreg 0FE8              ??_ENVIA_NIBBLE 0001  
            ENVIA_CHAR@dato 0002                        l2000 3CE0                        l2010 3D56  
                      l2002 3CF2                        ?_abs 0007                        l2020 3DDC  
                      l2012 3D72                        l2004 3D00                        l2030 3E2E  
                      l2022 3DF4                        l2014 3D7A                        l2006 3D3E  
                      l2040 3E7C                        l2032 3E3C                        l2024 3DFE  
                      l2016 3DC0                        l2008 3D4E                        l2042 3E86  
                      l2034 3E4A                        l2026 3E16                        l2018 3DC8  
                      l2036 3E54                        l2028 3E24                        l2038 3E64  
                      l1600 37E0                        l1610 3818                        l1602 37EE  
                      l1530 368E                        l1612 3826                        l1620 3850  
                      l1604 37F6                        l1532 3698                        l1540 33E8  
                      l1700 374E                        l1710 3576                        l1550 3874  
                      l1622 3860                        l1614 383C                        l1606 3808  
                      l1534 36B4                        l1526 366E                        l1542 33F4  
                      l1630 35F2                        l1702 376A                        l1720 3588  
                      l1712 3578                        l1800 32E6                        l1560 38A4  
                      l1552 3882                        l1624 3868                        l1616 3844  
                      l1608 3810                        l1536 36E6                        l1528 367E  
                      l1544 3402                        l1640 3634                        l1632 35FE  
                      l1704 3788                        l1730 359E                        l1722 358A  
                      l1714 357A                        l1810 32F6                        l1802 32E8  
                      l1570 38D2                        l1562 38A8                        l1554 388A  
                      l1618 384A                        l1546 3406                        l1642 3660  
                      l1634 360C                        l1650 3A62                        l1706 3794  
                      l1740 35CA                        l1732 35AA                        l1724 3592  
                      l1716 357C                        l1708 3572                        l1812 32FC  
                      l1804 32F0                        l1820 3314                        l1900 353E  
                      l1580 3906                        l1572 38E0                        l1564 38B0  
                      l1556 388E                        l1548 3872                        l1644 3342  
                      l1636 3620                        l1628 35E4                        l1660 3AA4  
                      l1652 3A76                        l1750 3284                        l1734 35B2  
                      l1726 3594                        l1718 3584                        l1814 3302  
                      l1806 32F2                        l1830 3326                        l1822 3318  
                      l1910 355E                        l1902 3546                        l1582 390C  
                      l1574 38E6                        l1566 38C2                        l1558 389C  
                      l1646 3350                        l1638 3630                        l1670 3AD2  
                      l1662 3AB0                        l1654 3A7E                        l1752 328C  
                      l1736 35B6                        l1744 35D0                        l1728 359C  
                      l1816 3308                        l1808 32F4                        l1832 3328  
                      l1824 331A                        l1912 3564                        l1904 354C  
                      l1920 33C0                        l1576 38FC                        l1568 38CA  
                      l1584 3912                        l1592 37C4                        l1680 3B3E  
                      l1672 3B00                        l1664 3AB8                        l1656 3A8E  
                      l1648 3A5E                        l1760 396E                        l1840 3424  
                      l1850 3222                        l1746 3276                        l1738 35C0  
                      l1834 332E                        l1826 3322                        l1818 3312  
                      l1930 349E                        l1914 356A                        l1906 3552  
                      l1922 33CC                        l1586 3922                        l1578 3904  
                      l1594 37C6                        l1690 3B82                        l1682 3B50  
                      l1674 3B02                        l1666 3AC4                        l1658 3A94  
                      l1770 39AC                        l1762 3972                        l1754 3934  
                      l1842 3430                        l1852 3224                        l1748 3282  
                      l1916 321A                        l1836 3334                        l1828 3324  
                      l1932 34A0                        l1908 3558                        l1924 33DE  
                      l1588 392A                        l1596 37D4                        l1684 3B60  
                      l1676 3B08                        l1668 3ACC                        l1772 39C8  
                      l1764 3986                        l1756 3956                        l1844 3440  
                      l1940 338E                        l1838 333A                        l1926 3466  
                      l1918 33B0                        l1862 3232                        l1854 32B0  
                      l1870 324C                        l1598 37DC                        l1686 3B70  
                      l1678 3B24                        l1694 3718                        l1782 3A2A  
                      l1774 39E4                        l1766 3994                        l1758 3962  
                      l1846 345C                        l1942 33A2                        l1934 3376  
                      l1950 3BA2                        l1928 346E                        l1864 3238  
                      l1856 32B6                        l1880 3258                        l1872 3250  
                      l1792 3260                        l1688 3B76                        l1696 3720  
                      l1776 39FC                        l1768 399E                        l1936 337E  
                      l1960 3BF2                        l1952 3BBA                        l1866 3244  
                      l1858 32C6                        l1882 325A                        l1874 3252  
                      l1794 326E                        l1890 34E0                        l1698 3742  
                      l1778 3A16                        l1786 3A3A                        l1938 3386  
                      l1970 3C10                        l1962 3C02                        l1954 3BCE  
                      l1946 3B9A                        l1796 32E0                        l1892 3512  
                      l1876 3254                        l1868 3248                        l1884 34B4  
                      l1980 3C6A                        l1972 3C10                        l1964 3C06  
                      l1956 3BD8                        l1948 3B9E                        l1798 32E2  
                      l1894 3516                        l1878 3256                        l1886 34B8  
                      l1990 3CAA                        l1982 3C7C                        l1974 3C1C  
                      l1966 3C0A                        l1958 3BE8                        ?_pad 000E  
                      l1896 351C                        l1888 34DC                        l1992 3CAC  
                      l1984 3C84                        l1976 3C58                        l1968 3C0E  
                      l1898 352A                        l1994 3CBC                        l1986 3C94  
                      l1978 3C66                        l1996 3CCE                        l1988 3CA6  
                      l1998 3CD0                        STR_1 3ED1                        STR_2 3EE9  
                      STR_3 3EB6                        STR_4 3EA7                        STR_5 3EC4  
                      STR_6 3EF2                        STR_7 3EF7                        STR_8 3EEE  
                      STR_9 3EDE                        u1000 3956                        u1001 3952  
                      u1010 3994                        u1011 3990                        u1100 33C0  
                      u1020 39C8                        u1101 33BC                        u1021 39C4  
                      u1110 33DE                        u1030 39E4                        u1111 33DA  
                      u1031 39E0                        u1120 349A                        u1040 326E  
                      u1041 326A                        u1130 34B2                        u1050 345C  
                      u1210 3D1A                        u1131 34AE                        u1051 3458  
                      u1211 3D12                        u1060 32C6                        u1061 32C2  
                      u1205 3CFA                        u1070 34D8                        u1230 3D3E  
                      u1206 3CFC                        u1150 3C66                        u1127 3490  
                      u1231 3D3A                        u1151 3C62                        u1080 3500  
                      u1240 3D72                        u1160 3C7C                        u1241 3D6E  
                      u1161 3C78                        u1145 3C44                        u1090 3510  
                      u1250 3E3C                        u1170 3CA6                        u1091 350C  
                      u1251 3E38                        u1171 3CA2                        u1228 3D1C  
                      u1180 3CCE                        u1077 34CE                        u1181 3CCA  
                      u1190 3CF2                        u1407 3540                        u1087 34F6  
                      u1191 3CEE                        _LATD 0F8C                        u1417 331C  
                      u1337 3BAC                        u1427 32EA                        u1347 3BC4  
                      u1437 357E                        u1357 3DE6                        u1447 358C  
                      u1367 3E90                        u1457 3596                        u1377 32B2  
                      u1467 35AC                        u1387 3522                        u1477 35BA  
                      u1397 3530                        u1487 35C4                        u1497 3286  
                      abs@a 0007                        _dbuf 0085                        _main 3B9A  
                      _dtoa 3A5E                        _prec 0049                        pad@i 0013  
                      pad@p 0010                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9            __end_of_ADC_Init 3232                        prodh 0FF4  
                      prodl 0FF3                        start 3EFC                ___param_bank 0000  
   __end_of_UART_Write_Text 3512             ??_ENVIA_LCD_CMD 0002                       ??_abs 0009  
                     ??_pad 0012            __end_of_LEER_LCD 35E4                       ?_main 0001  
                     ?_dtoa 0015             __end_of___awdiv 3934             __end_of___awmod 3872  
           ___awdiv@divisor 0003                       _T2CON 0FCA             ___awdiv@counter 0005  
                     _RCREG 0FAE                vfpfcnvrt@fmt 0021                       _SPBRG 0FAF  
                     _PORTD 0F83                       _TRISD 0F95                       _TRISE 0F96  
                     _TXREG 0FAD                 ?_UART_Write 0001                       _flags 004B  
       read_prec_or_width@c 0005         read_prec_or_width@n 0006                       _fputc 366E  
                     _fputs 33E8                 ?_POS_CURSOR 0004                       pad@fp 000E  
                     _width 0047                       _putch 3218                       dtoa@d 0016  
                     main@t 007F                       dtoa@i 001E                       dtoa@p 001C  
                     dtoa@s 001D                       dtoa@w 001A                main@temp_str 0074  
              main@uart_buf 0060            __end_of_PWM_Init 3248                       tablat 0FF5  
                     status 0FD8             __end_of_sprintf 33AE             __initialization 3290  
              __end_of_main 3EA6                __end_of_dtoa 3B9A             _ESCRIBE_MENSAJE 3466  
                    ??_main 0042                      ??_dtoa 0018               __activetblptr 0002  
__end_of_read_prec_or_width 37C4                      _ADCON0 0FC2                      _ADCON1 0FC1  
                    _ADCON2 0FC0                      ?_fputc 0001                      ?_fputs 0009  
                    _ADRESH 0FC4                      _ADRESL 0FC3                      _CCPR1L 0FBE  
          ___awdiv@dividend 0001                      ?_putch 0001                vfprintf@cfmt 002F  
         __end_of_UART_Init 325E                   ??___awdiv 0005                   ??___awmod 0005  
      __end_of_ENVIA_NIBBLE 3290            ?_UART_Write_Text 0002        read_prec_or_width@ap 0002  
                    clear_0 3296            ___awdiv@quotient 0007             ___awmod@divisor 0003  
                    isa$std 0001             ___awmod@counter 0005                      pad@buf 000F  
                    dtoa@fp 0015                      fputc@c 0001                      fputs@c 000B  
                    fputs@i 000C                      fputs@s 0009                   ?_ADC_Init 0001  
              __mediumconst 3EA6                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      putch@c 0001            __end_of_vfprintf 3466  
              ??_BORRAR_LCD 0004                   ??_sprintf 0036    __end_of_Read_Temperature 32DE  
                 ?_LEER_LCD 0001                  __accesstop 0060     __end_of__initialization 32A6  
              ??_LCD_CONFIG 0004               ___rparam_used 0001                ??_ENVIA_CHAR 0002  
   __end_of_ESCRIBE_MENSAJE 34B4              __pcstackCOMRAM 0001               __end_of_fputc 3718  
             __end_of_fputs 3424               __end_of_putch 321A          __end_of_BORRAR_LCD 3222  
                 ?_PWM_Init 0001            ENVIA_LCD_CMD@aux 0003                  ??_ADC_Init 0001  
        __end_of_LCD_CONFIG 3572          __end_of_ENVIA_CHAR 3342                     ??_fputc 0004  
                   ??_fputs 000B                     ??_putch 0001                  __pbssBANK0 0083  
                ??_LEER_LCD 0001            ENVIA_NIBBLE@dato 0001                     _CCP1CON 0FBD  
                ??_PWM_Init 0001                ??_UART_Write 0001                ??_POS_CURSOR 0005  
                   __Hparam 0000                     __Lparam 0000            ?_ESCRIBE_MENSAJE 0004  
                   ___awdiv 3872                     ___awmod 37C4          __end_of_UART_Write 3274  
                 ?_vfprintf 002B       __end_of_ENVIA_LCD_CMD 3310                     __pcinit 3290  
        __end_of_POS_CURSOR 33E8                     __ramtop 0800                     __ptext0 3B9A  
                   __ptext1 3376                     __ptext2 3424                     __ptext3 3934  
                   __ptext4 3718                     __ptext5 3A5E                     __ptext6 35E4  
                   __ptext7 33E8                     __ptext8 366E                     __ptext9 3218  
                 _T2CONbits 0FCA       read_prec_or_width@fmt 0001            ___awmod@dividend 0001  
                   main@adc 0079                     main@cmd 007E                     _sprintf 3376  
                   main@pwm 007D                _ENVIA_NIBBLE 3274        end_of_initialization 32A6  
                   fputc@fp 0003               __Lmediumconst 3EA6                     fputs@fp 000A  
        _read_prec_or_width 3718           __end_of_vfpfcnvrt 3A5E                   _RCSTAbits 0FAB  
                   postdec2 0FDD         ?_read_prec_or_width 0001                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0025  
                ??_vfprintf 002F                   _UART_Init 3248              UART_Write@data 0001  
                 _TRISAbits 0F92                   _TRISCbits 0F94                   _TRISDbits 0F95  
      ??_read_prec_or_width 0003           ?_Read_Temperature 0001                 _CCP1CONbits 0FBD  
                 _TXSTAbits 0FAC          ??_Read_Temperature 0003                 vfpfcnvrt@ap 0022  
               vfpfcnvrt@cp 0029                 vfpfcnvrt@fp 0020                 _BAUDCONbits 0FB8  
                ?_UART_Init 0001         start_initialization 3290                 __end_of_abs 3376  
               __end_of_pad 366E           ENVIA_LCD_CMD@dato 0002                 vfprintf@fmt 002C  
              _manual_state 0083                 __pbssCOMRAM 0047               __pcstackBANK0 0060  
                 _dtoa$1251 0018               __pmediumconst 3EA6                    ?___awdiv 0001  
                  ?___awmod 0001                 ??_UART_Init 0001                 __smallconst 3EA6  
                  _ADC_Init 3222                    ?_sprintf 0031           ??_UART_Write_Text 0004  
                  _LEER_LCD 3572                    _LATDbits 0F8C                    _LATEbits 0F8D  
                  _PIR1bits 0F9E            ESCRIBE_MENSAJE@i 0009                   _vfpfcnvrt 3934  
            POS_CURSOR@fila 0005                  _ADCON0bits 0FC2                    _PWM_Init 3232  
                  __Hrparam 0000                  vfprintf@ap 002E                    __Lrparam 0000  
                vfprintf@fp 002B                  ?_vfpfcnvrt 0020                  sprintf@fmt 0032  
                  _main$655 007B                    __ptext10 3342                    __ptext11 37C4  
                  __ptext20 3466                    __ptext12 3872                    __ptext21 3310  
                  __ptext13 34B4                    __ptext22 321A                    __ptext14 325E  
                  __ptext23 32DE                    __ptext15 3248                    __ptext24 3572  
                  __ptext16 32B0                    __ptext25 3274                    __ptext17 3232  
                  __ptext26 3222                    __ptext18 33AE                    __ptext19 3512  
                _BORRAR_LCD 321A         UART_Write_Text@text 0002                  _LCD_CONFIG 3512  
                _ENVIA_CHAR 3310                    isa$xinst 0000                    _override 0084  
                  _vfprintf 3424                    main@temp 0081               _ENVIA_LCD_CMD 32DE  
         ??_ESCRIBE_MENSAJE 0007       ESCRIBE_MENSAJE@cadena 0004                   sprintf@ap 0036  
            ?_ENVIA_LCD_CMD 0001                 ??_vfpfcnvrt 0023             _UART_Write_Text 34B4  
                  sprintf@f 0037                    sprintf@s 0031                  _UART_Write 325E  
               ?_BORRAR_LCD 0001               ?_ENVIA_NIBBLE 0001                  _POS_CURSOR 33AE  
               ?_LCD_CONFIG 0001          ESCRIBE_MENSAJE@tam 0006                 ?_ENVIA_CHAR 0001  
         POS_CURSOR@columna 0004  
